// Code generated by goctl. DO NOT EDIT.
package types

type Response struct {
}

type IdReq struct {
	Id int64 `json:"id"` //id
}

type AdminLoginReq struct {
	Username string `json:"username"` //用户名
	Password string `json:"password"` //密码
}

type LoginRes struct {
	Token string `json:"token"` // 登录令牌
}

type QueryUserReq struct {
	Id        int64  `form:"id,optional"`
	Name      string `form:"name,optional"`       //用户名
	Pid       int64  `form:"pid,optional"`        //上级id
	IsDisable int64  `form:"is_disable,optional"` //是否禁用 1禁用 2启用
	StartTime int64  `form:"start_time,optional"` //开始时间
	EndTime   int64  `form:"end_time,optional"`   //结束时间
	Page      int64  `form:"page"`                // 页码
	Size      int64  `form:"size"`                // 条数
}

type User struct {
	Id            int64  `json:"id"`
	Uid           int64  `json:"uid"`
	Name          string `json:"name"`           //用户名
	Avatar        string `json:"avatar"`         //头像
	Mail          string `json:"mail"`           //邮箱
	Integral      int64  `json:"integral"`       //积分
	Storage       int64  `json:"storage"`        //存储空间
	StorageUse    int64  `json:"storage_use"`    //使用存储空间
	WalletAddress string `json:"wallet_address"` //钱包地址
	Pid           int64  `json:"pid"`            //上级id
	Pname         string `json:"pname"`          //上级用户名
	Pintegral     int64  `json:"pintegral"`      //上级积分
	IsDisable     int64  `json:"is_disable"`     //是否禁用 1禁用 2启用
	CreatedTime   int64  `json:"created_time"`   //创建时间
	UpdatedTime   int64  `json:"updated_time"`   //修改时间
}

type QueryUserRes struct {
	Total int64   `json:"total"` //总条数
	Users []*User `json:"users"`
}

type AddAdminReq struct {
	Account   string `json:"account"`         //账户
	Password  string `json:"password"`        //用户密码
	IsDisable int64  `json:"is_disable"`      //是否禁用 1禁用 2启用
	Remark    string `json:"remark,optional"` //备注
}

type UpdateAdminReq struct {
	Id        int64  `json:"id"`
	Account   string `json:"account"`         //账户
	IsDisable int64  `json:"is_disable"`      //是否禁用 1禁用 2启用
	Remark    string `json:"remark,optional"` //备注
}

type UpdateAdminPassReq struct {
	Id          int64  `json:"id"`
	OldPassword string `json:"old_password"` //旧密码
	Password    string `json:"password"`     //新密码
}

type QueryAdminListReq struct {
	Id        int64  `form:"id,optional"`
	Account   string `form:"account,optional"`    //账户
	IsDisable int64  `form:"is_disable,optional"` //是否禁用 1禁用 2启用
	Page      int64  `form:"page"`                // 页码
	Size      int64  `form:"size"`                // 条数
}

type Admin struct {
	Id          int64  `json:"id"`
	Account     string `json:"account"`      //账户
	IsDisable   int64  `json:"is_disable"`   //是否禁用 1禁用 2启用
	Remark      string `json:"remark"`       //备注
	CreatedTime int64  `json:"created_time"` //创建时间
	LastTime    int64  `json:"last_time"`    //最后登录时间
}

type QueryAdminListRes struct {
	Total  int64    `json:"total"` //总条数
	Admins []*Admin `json:"admins"`
}

type AddTaskPoolReq struct {
	TaskType int64  `json:"task_type"` //任务类型 1入职2探索3邀请4奖励
	TaskName string `json:"task_name"` //任务名
	Url      string `json:"url"`       //链接
	Integral int64  `json:"integral"`  //奖励积分
}

type UpdateTaskPoolReq struct {
	Id        int64  `json:"id"`         //id
	TaskType  int64  `json:"task_type"`  //任务类型 1入职2探索3邀请4奖励
	TaskName  string `json:"task_name"`  //任务名
	Integral  int64  `json:"integral"`   //奖励积分
	IsDisable int64  `json:"is_disable"` //是否禁用 1禁用2启用
}

type DeleteTaskPoolReq struct {
	Id int64 `from:"id"` //id
}

type QueryTaskPoolReq struct {
	TaskType int64  `form:"task_type,optional"` //任务类型
	TaskName string `form:"task_name,optional"` //任务名
	Page     int64  `form:"page"`               // 页码
	Size     int64  `form:"size"`               // 条数
}

type TaskPool struct {
	Id          int64  `json:"id"`           //id
	TaskType    int64  `json:"task_type"`    //任务类型
	TaskName    string `json:"task_name"`    //任务名
	Integral    int64  `json:"integral"`     //奖励积分
	CreatedTime int64  `json:"created_time"` //创建时间
	UpdatedTime int64  `json:"updated_time"` //修改时间
}

type QueryTaskPoolRes struct {
	Count     int64       `json:"count"` //总条数
	TaskPools []*TaskPool `json:"task_pools"`
}

type ParameterReq struct {
	Id          int64  `json:"id"`                    //id
	ParamType   int64  `json:"param_type"`            //参数类型
	Name        string `json:"name"`                  //名称
	Desc        string `json:"desc"`                  //描述
	Value       string `json:"value"`                 //值
	BackupValue int64  `json:"backup_value,optional"` //备份值
}

type UpdateParameterReq struct {
	Parms []*ParameterReq `json:"parms"` //item
}

type QueryParameterReq struct {
	ParamType int64 `form:"param_type,optional"` //参数类型
}

type Dict struct {
	Id          int64  `json:"id"`           //id
	ParamType   int64  `json:"param_type"`   //参数类型
	Name        string `json:"name"`         //名称
	Desc        string `json:"desc"`         //描述
	Value       string `json:"value"`        //值
	BackupValue int64  `json:"backup_value"` //备份值
}

type QueryParameterResp struct {
	DictList []*Dict `json:"dict_list"` //dict
}

type Markup struct {
	Button       string `json:"button,optional"`        //按钮名称
	Url          string `json:"url,optional"`           //按钮url
	CallbackData string `json:"callback_data,optional"` //按钮回调数据
}

type SendPhotoReq struct {
	ChatID           string     `json:"chat_id,optional"`             //发送用户的标识或者是群组标识@群名称
	Photo            []byte     `json:"photo,optional"`               //图片地址 前端不需要传入
	Caption          string     `json:"caption,optional"`             //描述 最多0-1024 个字符
	ReplyMarkup      [][]Markup `json:"reply_markup,optional"`        //按钮
	FileSize         int64      `json:"file_size,optional"`           //文件大小 前端不需要传入
	IsPinChatMessage bool       `json:"is_pin_chat_message,optional"` //是否频道置顶
}

type DelBotPinReq struct {
	Id     int64 `json:"id"` //id
	ChatID int64 `json:"chat_id"`
	MsgID  int64 `json:"msg_id"`
}

type BotPinListReq struct {
	ChatID int64 `form:"chat_id,optional"`
	Page   int64 `form:"page"`
	Size   int64 `form:"size"`
}

type BotPin struct {
	Id     int64  `json:"id"`
	ChatID int64  `json:"chat_id"`
	MsgID  int64  `json:"msg_id"`
	Text   string `json:"text"`
}

type BotPinListResp struct {
	Total int64     `json:"total"`
	List  []*BotPin `json:"list"`
}

type DelAllBotPinReq struct {
	ChatID int64 `json:"chat_id"`
}

type DelBotCommandReq struct {
	Id int64 `json:"id"`
}

type AddBotCommandReq struct {
	BotCommand   string     `json:"bot_command,optional"`   //命令
	Description  string     `json:"description,optional"`   //描述 最多0-1024 个字符
	Photo        []byte     `json:"photo,optional"`         //图片地址 前端不需要传入
	Text         string     `json:"text,optional"`          //文本
	SendType     int64      `json:"send_type,optional"`     //类型 1回调 2文本 3是动画 4是图片
	ReplyMarkup  [][]Markup `json:"reply_markup,optional"`  //按钮
	LanguageCode string     `json:"language_code,optional"` //语言
}

type BotCommandListReq struct {
	BotCommand   string `form:"bot_command,optional"` //命令
	Description  string `form:"description,optional"`
	Text         string `form:"txst,optional"`
	SendType     int64  `form:"send_type,optional"`     //类型 1文本 2图片
	LanguageCode string `form:"language_code,optional"` //语言
	Page         int64  `form:"page"`
	Size         int64  `form:"size"`
}

type BotCommand struct {
	Id           int64  `json:"id"`
	BotCommand   string `json:"bot_command"`
	Description  string `json:"description"`
	Text         string `json:"text"`
	Stauts       int64  `json:"stauts"`
	SendType     int64  `json:"send_type"`
	LanguageCode string `json:"language_code"` //语言
	CreateTime   int64  `json:"create_time"`
	UpdateTime   int64  `json:"update_time"`
}

type BotCommandListResp struct {
	Total int64         `json:"total"`
	List  []*BotCommand `json:"list"`
}

type DelFileReq struct {
	Id int64 `form:"id"`
}

type BanFileReq struct {
	Id     int64 `json:"id"`
	Status int64 `json:"status"` //状态 1禁用3启用
}

type CancelFileReq struct {
	Id int64 `json:"id"`
}

type DownloadReq struct {
	Id int64 `json:"id"`
}

type DownloadResp struct {
	Flie []byte `json:"file,optional"` //文件
}

type QueryFileReq struct {
	Id         int64   `form:"id,optional"`
	AssetName  string  `form:"asset_name,optional"`  //资源名称
	AssetTypes []int64 `form:"asset_types,optional"` //1文件夹2文件3视频4图片
	Status     int64   `form:"status,optional"`      //状态 1禁用2进行中3完成4失败5空间不足
	StartTime  int64   `form:"start_time,optional"`  //开始时间
	EndTime    int64   `form:"end_time,optional"`    //结束时间
	IsReport   int64   `form:"is_report,optional"`   //查询举报文件
	Page       int64   `form:"page"`                 // 页码
	Size       int64   `form:"size"`                 // 条数
}

type AssetItem struct {
	Id          int64  `json:"id"`           //id
	Uid         int64  `json:"uid"`          //用户id
	Name        string `json:"name"`         //用户名
	Cid         string `json:"uid"`          //资源id
	Url         string `json:"url"`          //链接
	TransitType int64  `json:"transit_type"` //上传类型 1上传文件夹2上传文件3云链接 4TG 5X 6TK 7种子
	AssetName   string `json:"asset_name"`   //资源名称
	AssetSize   int64  `json:"asset_size"`   //资源大小
	AssetType   int64  `json:"asset_type"`   //1文件夹2文件3视频4图片
	CreatedTime int64  `json:"created_time"` //上传时间
	UpdatedTime int64  `json:"updated_time"` //修改时间
	IsTag       int64  `json:"is_tag"`       //是否标记
	Source      int64  `json:"source"`       //来源 1TDriver2云上传3Telegram
	Status      int64  `json:"status"`       //状态 1禁用2进行中3完成4失败
	IsReport    int64  `json:"is_report"`    //是否举报 1是2否
}

type QueryFileResp struct {
	Total      int64        `json:"page"` // 页码
	AssetItems []*AssetItem `json:"asset_items"`
}

type VideoListReq struct {
	Titel string `form:"titel,optional"`
	Desc  string `form:"desc,optional"`
	Page  int64  `form:"page"`
	Size  int64  `form:"size"`
}

type Video struct {
	Id          int64  `json:"id"`
	Title       string `json:"title"`        // 视频标题
	Uid         int64  `json:"uid"`          // 用户id
	Desc        string `json:"desc"`         // 视频描述
	FilePath    string `json:"file_path"`    // 视频地址
	Status      int64  `json:"status"`       // 状态 1禁用 2启用
	CreatedTime int64  `json:"created_time"` // 创建时间
}

type VideoListRes struct {
	List  []*Video `json:"list"`
	Total int64    `json:"total"`
}

type VideoUploadReq struct {
	File     []byte `json:"file,optional"`     // 文件
	Filename string `json:"filename,optional"` // 文件名
	Title    string `json:"title,optional"`    // 视频标题
	Desc     string `json:"desc,optional"`     // 视频描述
}

type VideoDeleteReq struct {
	Id int64 `json:"id"`
}

type VideoUploadResp struct {
	Id int64 `json:"id"`
}
