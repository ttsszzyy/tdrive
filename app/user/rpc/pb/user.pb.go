// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: proto/user.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 用户id
}

func (x *UidReq) Reset() {
	*x = UidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UidReq) ProtoMessage() {}

func (x *UidReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UidReq.ProtoReflect.Descriptor instead.
func (*UidReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{0}
}

func (x *UidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{1}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid           int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Mail          string `protobuf:"bytes,5,opt,name=mail,proto3" json:"mail,omitempty"`
	WalletAddress string `protobuf:"bytes,6,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	Distribution  int64  `protobuf:"varint,7,opt,name=distribution,proto3" json:"distribution,omitempty"`
	Source        int64  `protobuf:"varint,8,opt,name=source,proto3" json:"source,omitempty"`              //用户来源 1邀请2分享
	RecommendCode string `protobuf:"bytes,9,opt,name=recommendCode,proto3" json:"recommendCode,omitempty"` //推荐码
	Pid           int64  `protobuf:"varint,10,opt,name=pid,proto3" json:"pid,omitempty"`
	IsDisable     int64  `protobuf:"varint,11,opt,name=isDisable,proto3" json:"isDisable,omitempty"`
	CreatedTime   int64  `protobuf:"varint,12,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime   int64  `protobuf:"varint,13,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	Puid          int64  `protobuf:"varint,20,opt,name=puid,proto3" json:"puid,omitempty"`
	IsReceive     int64  `protobuf:"varint,22,opt,name=isReceive,proto3" json:"isReceive,omitempty"` //'是否领取奖励 0未领取 1已领取',
	LanguageCode  string `protobuf:"bytes,21,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	IsRead        int64  `protobuf:"varint,23,opt,name=isRead,proto3" json:"isRead,omitempty"` // 是否已阅读 1已阅读
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *User) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *User) GetDistribution() int64 {
	if x != nil {
		return x.Distribution
	}
	return 0
}

func (x *User) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *User) GetRecommendCode() string {
	if x != nil {
		return x.RecommendCode
	}
	return ""
}

func (x *User) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *User) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *User) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *User) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *User) GetPuid() int64 {
	if x != nil {
		return x.Puid
	}
	return 0
}

func (x *User) GetIsReceive() int64 {
	if x != nil {
		return x.IsReceive
	}
	return 0
}

func (x *User) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *User) GetIsRead() int64 {
	if x != nil {
		return x.IsRead
	}
	return 0
}

type UserCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // code
}

func (x *UserCodeReq) Reset() {
	*x = UserCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCodeReq) ProtoMessage() {}

func (x *UserCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCodeReq.ProtoReflect.Descriptor instead.
func (*UserCodeReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type FindTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                      // 用户id
	TaskPoolId []int64 `protobuf:"varint,2,rep,packed,name=taskPoolId,proto3" json:"taskPoolId,omitempty"` // 任务池id
}

func (x *FindTaskReq) Reset() {
	*x = FindTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTaskReq) ProtoMessage() {}

func (x *FindTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTaskReq.ProtoReflect.Descriptor instead.
func (*FindTaskReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{4}
}

func (x *FindTaskReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindTaskReq) GetTaskPoolId() []int64 {
	if x != nil {
		return x.TaskPoolId
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // id
	Uid         int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`               // uid
	FinishTime  int64 `protobuf:"varint,3,opt,name=finishTime,proto3" json:"finishTime,omitempty"` // 完成时间
	CreatedTime int64 `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime int64 `protobuf:"varint,5,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	TaskPoolId  int64 `protobuf:"varint,6,opt,name=taskPoolId,proto3" json:"taskPoolId,omitempty"` // 任务池id
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{5}
}

func (x *Task) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Task) GetFinishTime() int64 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *Task) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *Task) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *Task) GetTaskPoolId() int64 {
	if x != nil {
		return x.TaskPoolId
	}
	return 0
}

type TaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Tasks []*Task `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *TaskResp) Reset() {
	*x = TaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResp) ProtoMessage() {}

func (x *TaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResp.ProtoReflect.Descriptor instead.
func (*TaskResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{6}
}

func (x *TaskResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TaskResp) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type SaveTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskPoolId int64 `protobuf:"varint,1,opt,name=taskPoolId,proto3" json:"taskPoolId,omitempty"`
	Uid        int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"` // uid
}

func (x *SaveTaskReq) Reset() {
	*x = SaveTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTaskReq) ProtoMessage() {}

func (x *SaveTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTaskReq.ProtoReflect.Descriptor instead.
func (*SaveTaskReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{7}
}

func (x *SaveTaskReq) GetTaskPoolId() int64 {
	if x != nil {
		return x.TaskPoolId
	}
	return 0
}

func (x *SaveTaskReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Users []*User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserList) Reset() {
	*x = UserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{8}
}

func (x *UserList) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserList) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type SaveShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AssetName     string `protobuf:"bytes,3,opt,name=assetName,proto3" json:"assetName,omitempty"`
	AssetSize     int64  `protobuf:"varint,4,opt,name=assetSize,proto3" json:"assetSize,omitempty"`
	Link          string `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	EffectiveTime int64  `protobuf:"varint,6,opt,name=effectiveTime,proto3" json:"effectiveTime,omitempty"`
	AssetType     int64  `protobuf:"varint,7,opt,name=assetType,proto3" json:"assetType,omitempty"`
	AssetIds      string `protobuf:"bytes,8,opt,name=assetIds,proto3" json:"assetIds,omitempty"`
	Uuid          string `protobuf:"bytes,9,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SaveShareReq) Reset() {
	*x = SaveShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveShareReq) ProtoMessage() {}

func (x *SaveShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveShareReq.ProtoReflect.Descriptor instead.
func (*SaveShareReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{9}
}

func (x *SaveShareReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SaveShareReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *SaveShareReq) GetAssetSize() int64 {
	if x != nil {
		return x.AssetSize
	}
	return 0
}

func (x *SaveShareReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SaveShareReq) GetEffectiveTime() int64 {
	if x != nil {
		return x.EffectiveTime
	}
	return 0
}

func (x *SaveShareReq) GetAssetType() int64 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *SaveShareReq) GetAssetIds() string {
	if x != nil {
		return x.AssetIds
	}
	return ""
}

func (x *SaveShareReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type UpdateShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	EffectiveTime int64  `protobuf:"varint,3,opt,name=effectiveTime,proto3" json:"effectiveTime,omitempty"`
	ReadNum       int64  `protobuf:"varint,4,opt,name=readNum,proto3" json:"readNum,omitempty"`
	SaveNum       int64  `protobuf:"varint,5,opt,name=saveNum,proto3" json:"saveNum,omitempty"`
}

func (x *UpdateShareReq) Reset() {
	*x = UpdateShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShareReq) ProtoMessage() {}

func (x *UpdateShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShareReq.ProtoReflect.Descriptor instead.
func (*UpdateShareReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateShareReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateShareReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateShareReq) GetEffectiveTime() int64 {
	if x != nil {
		return x.EffectiveTime
	}
	return 0
}

func (x *UpdateShareReq) GetReadNum() int64 {
	if x != nil {
		return x.ReadNum
	}
	return 0
}

func (x *UpdateShareReq) GetSaveNum() int64 {
	if x != nil {
		return x.SaveNum
	}
	return 0
}

type FindShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Page int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FindShareReq) Reset() {
	*x = FindShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindShareReq) ProtoMessage() {}

func (x *FindShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindShareReq.ProtoReflect.Descriptor instead.
func (*FindShareReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{11}
}

func (x *FindShareReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindShareReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindShareReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Share struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid           int64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	AssetIds      []int64 `protobuf:"varint,3,rep,packed,name=assetIds,proto3" json:"assetIds,omitempty"`
	AssetName     string  `protobuf:"bytes,4,opt,name=assetName,proto3" json:"assetName,omitempty"`
	AssetSize     int64   `protobuf:"varint,5,opt,name=assetSize,proto3" json:"assetSize,omitempty"`
	AssetType     int64   `protobuf:"varint,6,opt,name=assetType,proto3" json:"assetType,omitempty"`
	Link          string  `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`
	EffectiveTime int64   `protobuf:"varint,8,opt,name=effectiveTime,proto3" json:"effectiveTime,omitempty"`
	ReadNum       int64   `protobuf:"varint,9,opt,name=readNum,proto3" json:"readNum,omitempty"`
	SaveNum       int64   `protobuf:"varint,10,opt,name=saveNum,proto3" json:"saveNum,omitempty"`
	CreatedTime   int64   `protobuf:"varint,11,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Password      string  `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	Uuid          string  `protobuf:"bytes,13,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	DeletedTime   int64   `protobuf:"varint,14,opt,name=deletedTime,proto3" json:"deletedTime,omitempty"`
}

func (x *Share) Reset() {
	*x = Share{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Share) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Share) ProtoMessage() {}

func (x *Share) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Share.ProtoReflect.Descriptor instead.
func (*Share) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{12}
}

func (x *Share) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Share) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Share) GetAssetIds() []int64 {
	if x != nil {
		return x.AssetIds
	}
	return nil
}

func (x *Share) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *Share) GetAssetSize() int64 {
	if x != nil {
		return x.AssetSize
	}
	return 0
}

func (x *Share) GetAssetType() int64 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *Share) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Share) GetEffectiveTime() int64 {
	if x != nil {
		return x.EffectiveTime
	}
	return 0
}

func (x *Share) GetReadNum() int64 {
	if x != nil {
		return x.ReadNum
	}
	return 0
}

func (x *Share) GetSaveNum() int64 {
	if x != nil {
		return x.SaveNum
	}
	return 0
}

func (x *Share) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *Share) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Share) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Share) GetDeletedTime() int64 {
	if x != nil {
		return x.DeletedTime
	}
	return 0
}

type FindShareResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shares []*Share `protobuf:"bytes,2,rep,name=shares,proto3" json:"shares,omitempty"`
	Total  int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindShareResp) Reset() {
	*x = FindShareResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindShareResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindShareResp) ProtoMessage() {}

func (x *FindShareResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindShareResp.ProtoReflect.Descriptor instead.
func (*FindShareResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{13}
}

func (x *FindShareResp) GetShares() []*Share {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *FindShareResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FindOneShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *FindOneShareReq) Reset() {
	*x = FindOneShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneShareReq) ProtoMessage() {}

func (x *FindOneShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneShareReq.ProtoReflect.Descriptor instead.
func (*FindOneShareReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{14}
}

func (x *FindOneShareReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindOneShareReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SaveAssetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Cid         string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	AssetName   string `protobuf:"bytes,3,opt,name=assetName,proto3" json:"assetName,omitempty"`
	AssetSize   int64  `protobuf:"varint,4,opt,name=assetSize,proto3" json:"assetSize,omitempty"`
	AssetType   int64  `protobuf:"varint,5,opt,name=assetType,proto3" json:"assetType,omitempty"`     //1文件夹2文件3视频4图片
	TransitType int64  `protobuf:"varint,6,opt,name=transitType,proto3" json:"transitType,omitempty"` //上传类型 1上传文件夹2上传文件3云链接 4TG 5X 6TK 7种子
	IsTag       int64  `protobuf:"varint,7,opt,name=isTag,proto3" json:"isTag,omitempty"`
	Pid         int64  `protobuf:"varint,8,opt,name=pid,proto3" json:"pid,omitempty"`
	Source      int64  `protobuf:"varint,9,opt,name=source,proto3" json:"source,omitempty"`  //积分来源 1本地上次2云上传
	Status      int64  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"` //状态 1禁用2进行中3完成4失败5空间不足
}

func (x *SaveAssetsReq) Reset() {
	*x = SaveAssetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAssetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAssetsReq) ProtoMessage() {}

func (x *SaveAssetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAssetsReq.ProtoReflect.Descriptor instead.
func (*SaveAssetsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{15}
}

func (x *SaveAssetsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SaveAssetsReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *SaveAssetsReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *SaveAssetsReq) GetAssetSize() int64 {
	if x != nil {
		return x.AssetSize
	}
	return 0
}

func (x *SaveAssetsReq) GetAssetType() int64 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *SaveAssetsReq) GetTransitType() int64 {
	if x != nil {
		return x.TransitType
	}
	return 0
}

func (x *SaveAssetsReq) GetIsTag() int64 {
	if x != nil {
		return x.IsTag
	}
	return 0
}

func (x *SaveAssetsReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SaveAssetsReq) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *SaveAssetsReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateAssetsNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssetName  string `protobuf:"bytes,2,opt,name=assetName,proto3" json:"assetName,omitempty"`
	IsTag      int64  `protobuf:"varint,3,opt,name=isTag,proto3" json:"isTag,omitempty"`   //是否标记 1是2否
	Status     int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"` //状态 1禁用2进行中3完成4失败5空间不足
	Cid        string `protobuf:"bytes,5,opt,name=cid,proto3" json:"cid,omitempty"`
	AssetSize  int64  `protobuf:"varint,6,opt,name=assetSize,proto3" json:"assetSize,omitempty"`
	IsReport   int64  `protobuf:"varint,7,opt,name=isReport,proto3" json:"isReport,omitempty"`     //是否举报 1是2否
	ReportType int64  `protobuf:"varint,8,opt,name=reportType,proto3" json:"reportType,omitempty"` //举报类型 1色情2恐怖3暴力4虐待
	Link       string `protobuf:"bytes,9,opt,name=link,proto3" json:"link,omitempty"`              //链接
}

func (x *UpdateAssetsNameReq) Reset() {
	*x = UpdateAssetsNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetsNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetsNameReq) ProtoMessage() {}

func (x *UpdateAssetsNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetsNameReq.ProtoReflect.Descriptor instead.
func (*UpdateAssetsNameReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateAssetsNameReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAssetsNameReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *UpdateAssetsNameReq) GetIsTag() int64 {
	if x != nil {
		return x.IsTag
	}
	return 0
}

func (x *UpdateAssetsNameReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateAssetsNameReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *UpdateAssetsNameReq) GetAssetSize() int64 {
	if x != nil {
		return x.AssetSize
	}
	return 0
}

func (x *UpdateAssetsNameReq) GetIsReport() int64 {
	if x != nil {
		return x.IsReport
	}
	return 0
}

func (x *UpdateAssetsNameReq) GetReportType() int64 {
	if x != nil {
		return x.ReportType
	}
	return 0
}

func (x *UpdateAssetsNameReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type UpdateAssetsMoveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Pid int64   `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *UpdateAssetsMoveReq) Reset() {
	*x = UpdateAssetsMoveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetsMoveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetsMoveReq) ProtoMessage() {}

func (x *UpdateAssetsMoveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetsMoveReq.ProtoReflect.Descriptor instead.
func (*UpdateAssetsMoveReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateAssetsMoveReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateAssetsMoveReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type UpdateAssetsCopyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids  []int64  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Pid  int64    `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Cids []string `protobuf:"bytes,3,rep,name=cids,proto3" json:"cids,omitempty"`
}

func (x *UpdateAssetsCopyReq) Reset() {
	*x = UpdateAssetsCopyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetsCopyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetsCopyReq) ProtoMessage() {}

func (x *UpdateAssetsCopyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetsCopyReq.ProtoReflect.Descriptor instead.
func (*UpdateAssetsCopyReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateAssetsCopyReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateAssetsCopyReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *UpdateAssetsCopyReq) GetCids() []string {
	if x != nil {
		return x.Cids
	}
	return nil
}

type DelAssetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Uid int64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DelAssetsReq) Reset() {
	*x = DelAssetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAssetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAssetsReq) ProtoMessage() {}

func (x *DelAssetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAssetsReq.ProtoReflect.Descriptor instead.
func (*DelAssetsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{19}
}

func (x *DelAssetsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DelAssetsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FindAssetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid        int64   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	AssetName  string  `protobuf:"bytes,2,opt,name=assetName,proto3" json:"assetName,omitempty"`
	Page       int64   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size       int64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Uid        int64   `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	Cid        string  `protobuf:"bytes,6,opt,name=cid,proto3" json:"cid,omitempty"`
	Ids        []int64 `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	IsTag      int64   `protobuf:"varint,8,opt,name=isTag,proto3" json:"isTag,omitempty"`
	IsDel      bool    `protobuf:"varint,9,opt,name=isDel,proto3" json:"isDel,omitempty"`
	Status     []int64 `protobuf:"varint,10,rep,packed,name=status,proto3" json:"status,omitempty"`
	Order      int64   `protobuf:"varint,11,opt,name=order,proto3" json:"order,omitempty"`                  //0是创建时间1是更新时间2是大小3assetName
	StartTime  int64   `protobuf:"varint,12,opt,name=startTime,proto3" json:"startTime,omitempty"`          //开始时间
	EndTime    int64   `protobuf:"varint,13,opt,name=endTime,proto3" json:"endTime,omitempty"`              //结束时间
	IsReport   int64   `protobuf:"varint,14,opt,name=isReport,proto3" json:"isReport,omitempty"`            //是否举报 1是2否
	Sort       int64   `protobuf:"varint,15,opt,name=sort,proto3" json:"sort,omitempty"`                    //0降序1升序
	AssetTypes []int64 `protobuf:"varint,16,rep,packed,name=assetTypes,proto3" json:"assetTypes,omitempty"` //1文件夹2文件3视频4图片
	IsAdd      bool    `protobuf:"varint,17,opt,name=isAdd,proto3" json:"isAdd,omitempty"`                  //查询最近添加
}

func (x *FindAssetsReq) Reset() {
	*x = FindAssetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAssetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAssetsReq) ProtoMessage() {}

func (x *FindAssetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAssetsReq.ProtoReflect.Descriptor instead.
func (*FindAssetsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{20}
}

func (x *FindAssetsReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *FindAssetsReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *FindAssetsReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAssetsReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FindAssetsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindAssetsReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FindAssetsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *FindAssetsReq) GetIsTag() int64 {
	if x != nil {
		return x.IsTag
	}
	return 0
}

func (x *FindAssetsReq) GetIsDel() bool {
	if x != nil {
		return x.IsDel
	}
	return false
}

func (x *FindAssetsReq) GetStatus() []int64 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FindAssetsReq) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *FindAssetsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FindAssetsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *FindAssetsReq) GetIsReport() int64 {
	if x != nil {
		return x.IsReport
	}
	return 0
}

func (x *FindAssetsReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *FindAssetsReq) GetAssetTypes() []int64 {
	if x != nil {
		return x.AssetTypes
	}
	return nil
}

func (x *FindAssetsReq) GetIsAdd() bool {
	if x != nil {
		return x.IsAdd
	}
	return false
}

type Assets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Cid         string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	AssetName   string `protobuf:"bytes,3,opt,name=assetName,proto3" json:"assetName,omitempty"`
	AssetSize   int64  `protobuf:"varint,4,opt,name=assetSize,proto3" json:"assetSize,omitempty"`
	AssetType   int64  `protobuf:"varint,5,opt,name=assetType,proto3" json:"assetType,omitempty"`     //1文件夹2文件3视频4图片
	TransitType int64  `protobuf:"varint,6,opt,name=transitType,proto3" json:"transitType,omitempty"` //上传类型 1上传文件夹2上传文件3云链接 4TG 5X 6TK 7种子
	IsTag       int64  `protobuf:"varint,7,opt,name=isTag,proto3" json:"isTag,omitempty"`
	Pid         int64  `protobuf:"varint,8,opt,name=pid,proto3" json:"pid,omitempty"`
	Source      int64  `protobuf:"varint,9,opt,name=source,proto3" json:"source,omitempty"` //积分来源 1本地上次2云上传
	CreatedTime int64  `protobuf:"varint,11,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime int64  `protobuf:"varint,12,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	DeletedTime int64  `protobuf:"varint,13,opt,name=deletedTime,proto3" json:"deletedTime,omitempty"`
	Status      int64  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`         //状态 1禁用2进行中3完成
	IsReport    int64  `protobuf:"varint,15,opt,name=isReport,proto3" json:"isReport,omitempty"`     //是否举报 1是2否
	ReportType  int64  `protobuf:"varint,16,opt,name=reportType,proto3" json:"reportType,omitempty"` //举报类型 1色情2恐怖3暴力4虐待
	Link        string `protobuf:"bytes,17,opt,name=link,proto3" json:"link,omitempty"`              //链接
	IsDefault   int64  `protobuf:"varint,18,opt,name=isDefault,proto3" json:"isDefault,omitempty"`   //是否默认 是否默认 1是0否
}

func (x *Assets) Reset() {
	*x = Assets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assets) ProtoMessage() {}

func (x *Assets) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assets.ProtoReflect.Descriptor instead.
func (*Assets) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{21}
}

func (x *Assets) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Assets) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Assets) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Assets) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *Assets) GetAssetSize() int64 {
	if x != nil {
		return x.AssetSize
	}
	return 0
}

func (x *Assets) GetAssetType() int64 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *Assets) GetTransitType() int64 {
	if x != nil {
		return x.TransitType
	}
	return 0
}

func (x *Assets) GetIsTag() int64 {
	if x != nil {
		return x.IsTag
	}
	return 0
}

func (x *Assets) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Assets) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *Assets) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *Assets) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *Assets) GetDeletedTime() int64 {
	if x != nil {
		return x.DeletedTime
	}
	return 0
}

func (x *Assets) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Assets) GetIsReport() int64 {
	if x != nil {
		return x.IsReport
	}
	return 0
}

func (x *Assets) GetReportType() int64 {
	if x != nil {
		return x.ReportType
	}
	return 0
}

func (x *Assets) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Assets) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type FindAssetsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int64     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Assets []*Assets `protobuf:"bytes,2,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *FindAssetsResp) Reset() {
	*x = FindAssetsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAssetsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAssetsResp) ProtoMessage() {}

func (x *FindAssetsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAssetsResp.ProtoReflect.Descriptor instead.
func (*FindAssetsResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{22}
}

func (x *FindAssetsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FindAssetsResp) GetAssets() []*Assets {
	if x != nil {
		return x.Assets
	}
	return nil
}

type FindOneAssetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cid       string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Uid       int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	IsDefault int64  `protobuf:"varint,3,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	AssetName string `protobuf:"bytes,5,opt,name=assetName,proto3" json:"assetName,omitempty"`
	AssetType int64  `protobuf:"varint,6,opt,name=assetType,proto3" json:"assetType,omitempty"` //1文件夹2文件3视频4图片
}

func (x *FindOneAssetsReq) Reset() {
	*x = FindOneAssetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneAssetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneAssetsReq) ProtoMessage() {}

func (x *FindOneAssetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneAssetsReq.ProtoReflect.Descriptor instead.
func (*FindOneAssetsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{23}
}

func (x *FindOneAssetsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindOneAssetsReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FindOneAssetsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindOneAssetsReq) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *FindOneAssetsReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *FindOneAssetsReq) GetAssetType() int64 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

type UpdateAssetsStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid    string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Status int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateAssetsStatusReq) Reset() {
	*x = UpdateAssetsStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetsStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetsStatusReq) ProtoMessage() {}

func (x *UpdateAssetsStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetsStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateAssetsStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateAssetsStatusReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *UpdateAssetsStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SaveAssetsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveAssetsResp) Reset() {
	*x = SaveAssetsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAssetsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAssetsResp) ProtoMessage() {}

func (x *SaveAssetsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAssetsResp.ProtoReflect.Descriptor instead.
func (*SaveAssetsResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{25}
}

func (x *SaveAssetsResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DelUserReq) Reset() {
	*x = DelUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserReq) ProtoMessage() {}

func (x *DelUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserReq.ProtoReflect.Descriptor instead.
func (*DelUserReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{26}
}

func (x *DelUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type SignInTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integral int64 `protobuf:"varint,1,opt,name=integral,proto3" json:"integral,omitempty"`
}

func (x *SignInTaskResp) Reset() {
	*x = SignInTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInTaskResp) ProtoMessage() {}

func (x *SignInTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInTaskResp.ProtoReflect.Descriptor instead.
func (*SignInTaskResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{27}
}

func (x *SignInTaskResp) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

type SaveMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Uid    int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Puid   int64  `protobuf:"varint,3,opt,name=puid,proto3" json:"puid,omitempty"`
	Status int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SaveMessageReq) Reset() {
	*x = SaveMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMessageReq) ProtoMessage() {}

func (x *SaveMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMessageReq.ProtoReflect.Descriptor instead.
func (*SaveMessageReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{28}
}

func (x *SaveMessageReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveMessageReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SaveMessageReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveMessageReq) GetPuid() int64 {
	if x != nil {
		return x.Puid
	}
	return 0
}

func (x *SaveMessageReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SaveMessageReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DelMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelMessageReq) Reset() {
	*x = DelMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMessageReq) ProtoMessage() {}

func (x *DelMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMessageReq.ProtoReflect.Descriptor instead.
func (*DelMessageReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{29}
}

func (x *DelMessageReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Puid int64 `protobuf:"varint,1,opt,name=puid,proto3" json:"puid,omitempty"`
	Page int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FindMessageReq) Reset() {
	*x = FindMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMessageReq) ProtoMessage() {}

func (x *FindMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMessageReq.ProtoReflect.Descriptor instead.
func (*FindMessageReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{30}
}

func (x *FindMessageReq) GetPuid() int64 {
	if x != nil {
		return x.Puid
	}
	return 0
}

func (x *FindMessageReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindMessageReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type MessageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid         int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Puid        int64  `protobuf:"varint,4,opt,name=puid,proto3" json:"puid,omitempty"`
	Status      int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Remark      string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	CreatedTime int64  `protobuf:"varint,7,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime int64  `protobuf:"varint,8,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
}

func (x *MessageItem) Reset() {
	*x = MessageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageItem) ProtoMessage() {}

func (x *MessageItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageItem.ProtoReflect.Descriptor instead.
func (*MessageItem) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{31}
}

func (x *MessageItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MessageItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageItem) GetPuid() int64 {
	if x != nil {
		return x.Puid
	}
	return 0
}

func (x *MessageItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessageItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MessageItem) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *MessageItem) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type FindMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Messages []*MessageItem `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *FindMessageResp) Reset() {
	*x = FindMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMessageResp) ProtoMessage() {}

func (x *FindMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMessageResp.ProtoReflect.Descriptor instead.
func (*FindMessageResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{32}
}

func (x *FindMessageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FindMessageResp) GetMessages() []*MessageItem {
	if x != nil {
		return x.Messages
	}
	return nil
}

type FindUserByPidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid  int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Puid int64 `protobuf:"varint,2,opt,name=puid,proto3" json:"puid,omitempty"`
}

func (x *FindUserByPidReq) Reset() {
	*x = FindUserByPidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByPidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByPidReq) ProtoMessage() {}

func (x *FindUserByPidReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByPidReq.ProtoReflect.Descriptor instead.
func (*FindUserByPidReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{33}
}

func (x *FindUserByPidReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *FindUserByPidReq) GetPuid() int64 {
	if x != nil {
		return x.Puid
	}
	return 0
}

type FindOneTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid         int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	TaskPoolId  int64 `protobuf:"varint,3,opt,name=taskPoolId,proto3" json:"taskPoolId,omitempty"`
	CreatedTime int64 `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *FindOneTaskReq) Reset() {
	*x = FindOneTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneTaskReq) ProtoMessage() {}

func (x *FindOneTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneTaskReq.ProtoReflect.Descriptor instead.
func (*FindOneTaskReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{34}
}

func (x *FindOneTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindOneTaskReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindOneTaskReq) GetTaskPoolId() int64 {
	if x != nil {
		return x.TaskPoolId
	}
	return 0
}

func (x *FindOneTaskReq) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type UpdateTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FinishTime  int64 `protobuf:"varint,2,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
	UpdatedTime int64 `protobuf:"varint,3,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
}

func (x *UpdateTaskReq) Reset() {
	*x = UpdateTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskReq) ProtoMessage() {}

func (x *UpdateTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskReq.ProtoReflect.Descriptor instead.
func (*UpdateTaskReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTaskReq) GetFinishTime() int64 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *UpdateTaskReq) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type CountUserByExchangeStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountUserByExchangeStorageReq) Reset() {
	*x = CountUserByExchangeStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserByExchangeStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserByExchangeStorageReq) ProtoMessage() {}

func (x *CountUserByExchangeStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserByExchangeStorageReq.ProtoReflect.Descriptor instead.
func (*CountUserByExchangeStorageReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{36}
}

type CountUserByExchangeStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountUserByExchangeStorageResp) Reset() {
	*x = CountUserByExchangeStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserByExchangeStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserByExchangeStorageResp) ProtoMessage() {}

func (x *CountUserByExchangeStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserByExchangeStorageResp.ProtoReflect.Descriptor instead.
func (*CountUserByExchangeStorageResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{37}
}

func (x *CountUserByExchangeStorageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CountUserInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *CountUserInviteReq) Reset() {
	*x = CountUserInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserInviteReq) ProtoMessage() {}

func (x *CountUserInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserInviteReq.ProtoReflect.Descriptor instead.
func (*CountUserInviteReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{38}
}

func (x *CountUserInviteReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type CountUserInviteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountUserInviteResp) Reset() {
	*x = CountUserInviteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserInviteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserInviteResp) ProtoMessage() {}

func (x *CountUserInviteResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserInviteResp.ProtoReflect.Descriptor instead.
func (*CountUserInviteResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{39}
}

func (x *CountUserInviteResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CheckUserInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CheckUserInviteReq) Reset() {
	*x = CheckUserInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserInviteReq) ProtoMessage() {}

func (x *CheckUserInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserInviteReq.ProtoReflect.Descriptor instead.
func (*CheckUserInviteReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{40}
}

func (x *CheckUserInviteReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *CheckUserInviteReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CheckUserInviteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CheckUserInviteResp) Reset() {
	*x = CheckUserInviteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserInviteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserInviteResp) ProtoMessage() {}

func (x *CheckUserInviteResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserInviteResp.ProtoReflect.Descriptor instead.
func (*CheckUserInviteResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{41}
}

func (x *CheckUserInviteResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CountAssetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetName  string `protobuf:"bytes,1,opt,name=assetName,proto3" json:"assetName,omitempty"`
	Uid        int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Pid        int64  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	IsTag      int64  `protobuf:"varint,4,opt,name=isTag,proto3" json:"isTag,omitempty"`
	IsDel      bool   `protobuf:"varint,5,opt,name=isDel,proto3" json:"isDel,omitempty"`
	Status     int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Cid        string `protobuf:"bytes,7,opt,name=cid,proto3" json:"cid,omitempty"`
	AssetTypes int64  `protobuf:"varint,8,opt,name=assetTypes,proto3" json:"assetTypes,omitempty"` //1文件夹2文件3视频4图片
}

func (x *CountAssetsReq) Reset() {
	*x = CountAssetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAssetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAssetsReq) ProtoMessage() {}

func (x *CountAssetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAssetsReq.ProtoReflect.Descriptor instead.
func (*CountAssetsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{42}
}

func (x *CountAssetsReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *CountAssetsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CountAssetsReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *CountAssetsReq) GetIsTag() int64 {
	if x != nil {
		return x.IsTag
	}
	return 0
}

func (x *CountAssetsReq) GetIsDel() bool {
	if x != nil {
		return x.IsDel
	}
	return false
}

func (x *CountAssetsReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CountAssetsReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CountAssetsReq) GetAssetTypes() int64 {
	if x != nil {
		return x.AssetTypes
	}
	return 0
}

type CountAssetsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountAssetsResp) Reset() {
	*x = CountAssetsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAssetsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAssetsResp) ProtoMessage() {}

func (x *CountAssetsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAssetsResp.ProtoReflect.Descriptor instead.
func (*CountAssetsResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{43}
}

func (x *CountAssetsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FindUserRewardIntegralReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *FindUserRewardIntegralReq) Reset() {
	*x = FindUserRewardIntegralReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserRewardIntegralReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserRewardIntegralReq) ProtoMessage() {}

func (x *FindUserRewardIntegralReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserRewardIntegralReq.ProtoReflect.Descriptor instead.
func (*FindUserRewardIntegralReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{44}
}

func (x *FindUserRewardIntegralReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FindUserRewardIntegralResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid         int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	InviteNum   int64 `protobuf:"varint,3,opt,name=inviteNum,proto3" json:"inviteNum,omitempty"`
	CreatedTime int64 `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *FindUserRewardIntegralResp) Reset() {
	*x = FindUserRewardIntegralResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserRewardIntegralResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserRewardIntegralResp) ProtoMessage() {}

func (x *FindUserRewardIntegralResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserRewardIntegralResp.ProtoReflect.Descriptor instead.
func (*FindUserRewardIntegralResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{45}
}

func (x *FindUserRewardIntegralResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindUserRewardIntegralResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindUserRewardIntegralResp) GetInviteNum() int64 {
	if x != nil {
		return x.InviteNum
	}
	return 0
}

func (x *FindUserRewardIntegralResp) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type SaveUserRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pid       int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Points    int64 `protobuf:"varint,3,opt,name=points,proto3" json:"points,omitempty"`
	PointsVip int64 `protobuf:"varint,4,opt,name=pointsVip,proto3" json:"pointsVip,omitempty"` //tg会员奖励积分
}

func (x *SaveUserRewardReq) Reset() {
	*x = SaveUserRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUserRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUserRewardReq) ProtoMessage() {}

func (x *SaveUserRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUserRewardReq.ProtoReflect.Descriptor instead.
func (*SaveUserRewardReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{46}
}

func (x *SaveUserRewardReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SaveUserRewardReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SaveUserRewardReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *SaveUserRewardReq) GetPointsVip() int64 {
	if x != nil {
		return x.PointsVip
	}
	return 0
}

type ClaimInviteRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ClaimInviteRewardReq) Reset() {
	*x = ClaimInviteRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimInviteRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimInviteRewardReq) ProtoMessage() {}

func (x *ClaimInviteRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimInviteRewardReq.ProtoReflect.Descriptor instead.
func (*ClaimInviteRewardReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{47}
}

func (x *ClaimInviteRewardReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FindUserInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid []int64 `protobuf:"varint,1,rep,packed,name=uid,proto3" json:"uid,omitempty"`
	Pid int64   `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *FindUserInviteReq) Reset() {
	*x = FindUserInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserInviteReq) ProtoMessage() {}

func (x *FindUserInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserInviteReq.ProtoReflect.Descriptor instead.
func (*FindUserInviteReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{48}
}

func (x *FindUserInviteReq) GetUid() []int64 {
	if x != nil {
		return x.Uid
	}
	return nil
}

func (x *FindUserInviteReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type UserInvite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pid          int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	CreatedTime  int64 `protobuf:"varint,3,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Id           int64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	InvitePoints int64 `protobuf:"varint,5,opt,name=invitePoints,proto3" json:"invitePoints,omitempty"`
}

func (x *UserInvite) Reset() {
	*x = UserInvite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInvite) ProtoMessage() {}

func (x *UserInvite) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInvite.ProtoReflect.Descriptor instead.
func (*UserInvite) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{49}
}

func (x *UserInvite) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInvite) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *UserInvite) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *UserInvite) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInvite) GetInvitePoints() int64 {
	if x != nil {
		return x.InvitePoints
	}
	return 0
}

type FindUserInviteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserInvite `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FindUserInviteResp) Reset() {
	*x = FindUserInviteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserInviteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserInviteResp) ProtoMessage() {}

func (x *FindUserInviteResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserInviteResp.ProtoReflect.Descriptor instead.
func (*FindUserInviteResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{50}
}

func (x *FindUserInviteResp) GetList() []*UserInvite {
	if x != nil {
		return x.List
	}
	return nil
}

type FindOneUserPointsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *FindOneUserPointsReq) Reset() {
	*x = FindOneUserPointsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneUserPointsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneUserPointsReq) ProtoMessage() {}

func (x *FindOneUserPointsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneUserPointsReq.ProtoReflect.Descriptor instead.
func (*FindOneUserPointsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{51}
}

func (x *FindOneUserPointsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FindOneUserPointsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid         int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Points      int64 `protobuf:"varint,3,opt,name=points,proto3" json:"points,omitempty"`       //积分
	ReqPoints   int64 `protobuf:"varint,4,opt,name=reqPoints,proto3" json:"reqPoints,omitempty"` //邀请奖励积分
	CreatedTime int64 `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *FindOneUserPointsResp) Reset() {
	*x = FindOneUserPointsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneUserPointsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneUserPointsResp) ProtoMessage() {}

func (x *FindOneUserPointsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneUserPointsResp.ProtoReflect.Descriptor instead.
func (*FindOneUserPointsResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{52}
}

func (x *FindOneUserPointsResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindOneUserPointsResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindOneUserPointsResp) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *FindOneUserPointsResp) GetReqPoints() int64 {
	if x != nil {
		return x.ReqPoints
	}
	return 0
}

func (x *FindOneUserPointsResp) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type FindOneUserStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *FindOneUserStorageReq) Reset() {
	*x = FindOneUserStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneUserStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneUserStorageReq) ProtoMessage() {}

func (x *FindOneUserStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneUserStorageReq.ProtoReflect.Descriptor instead.
func (*FindOneUserStorageReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{53}
}

func (x *FindOneUserStorageReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FindOneUserStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid        int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Storage    int64 `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageUse int64 `protobuf:"varint,5,opt,name=storageUse,proto3" json:"storageUse,omitempty"`
	ReqStorage int64 `protobuf:"varint,6,opt,name=reqStorage,proto3" json:"reqStorage,omitempty"`
	SurStorage int64 `protobuf:"varint,7,opt,name=surStorage,proto3" json:"surStorage,omitempty"`
}

func (x *FindOneUserStorageResp) Reset() {
	*x = FindOneUserStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneUserStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneUserStorageResp) ProtoMessage() {}

func (x *FindOneUserStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneUserStorageResp.ProtoReflect.Descriptor instead.
func (*FindOneUserStorageResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{54}
}

func (x *FindOneUserStorageResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindOneUserStorageResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindOneUserStorageResp) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *FindOneUserStorageResp) GetStorageUse() int64 {
	if x != nil {
		return x.StorageUse
	}
	return 0
}

func (x *FindOneUserStorageResp) GetReqStorage() int64 {
	if x != nil {
		return x.ReqStorage
	}
	return 0
}

func (x *FindOneUserStorageResp) GetSurStorage() int64 {
	if x != nil {
		return x.SurStorage
	}
	return 0
}

type SaveUserPointsAndStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Points          int64 `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
	ReqPoints       int64 `protobuf:"varint,4,opt,name=reqPoints,proto3" json:"reqPoints,omitempty"`
	Storage         int64 `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageUse      int64 `protobuf:"varint,5,opt,name=storageUse,proto3" json:"storageUse,omitempty"`
	StorageExchange int64 `protobuf:"varint,6,opt,name=storageExchange,proto3" json:"storageExchange,omitempty"` //兑换空间
}

func (x *SaveUserPointsAndStorageReq) Reset() {
	*x = SaveUserPointsAndStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUserPointsAndStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUserPointsAndStorageReq) ProtoMessage() {}

func (x *SaveUserPointsAndStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUserPointsAndStorageReq.ProtoReflect.Descriptor instead.
func (*SaveUserPointsAndStorageReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{55}
}

func (x *SaveUserPointsAndStorageReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SaveUserPointsAndStorageReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *SaveUserPointsAndStorageReq) GetReqPoints() int64 {
	if x != nil {
		return x.ReqPoints
	}
	return 0
}

func (x *SaveUserPointsAndStorageReq) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *SaveUserPointsAndStorageReq) GetStorageUse() int64 {
	if x != nil {
		return x.StorageUse
	}
	return 0
}

func (x *SaveUserPointsAndStorageReq) GetStorageExchange() int64 {
	if x != nil {
		return x.StorageExchange
	}
	return 0
}

type FindUserPointsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid []int64 `protobuf:"varint,1,rep,packed,name=uid,proto3" json:"uid,omitempty"`
}

func (x *FindUserPointsReq) Reset() {
	*x = FindUserPointsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserPointsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserPointsReq) ProtoMessage() {}

func (x *FindUserPointsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserPointsReq.ProtoReflect.Descriptor instead.
func (*FindUserPointsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{56}
}

func (x *FindUserPointsReq) GetUid() []int64 {
	if x != nil {
		return x.Uid
	}
	return nil
}

type FindUserPointsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FindOneUserPointsResp `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FindUserPointsResp) Reset() {
	*x = FindUserPointsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserPointsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserPointsResp) ProtoMessage() {}

func (x *FindUserPointsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserPointsResp.ProtoReflect.Descriptor instead.
func (*FindUserPointsResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{57}
}

func (x *FindUserPointsResp) GetList() []*FindOneUserPointsResp {
	if x != nil {
		return x.List
	}
	return nil
}

type FindUserStorageExchangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Page int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FindUserStorageExchangeReq) Reset() {
	*x = FindUserStorageExchangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserStorageExchangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserStorageExchangeReq) ProtoMessage() {}

func (x *FindUserStorageExchangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserStorageExchangeReq.ProtoReflect.Descriptor instead.
func (*FindUserStorageExchangeReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{58}
}

func (x *FindUserStorageExchangeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindUserStorageExchangeReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindUserStorageExchangeReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FindUserStorageExchangeRespList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	List  []*FindUserStorageExchangeResp `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FindUserStorageExchangeRespList) Reset() {
	*x = FindUserStorageExchangeRespList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserStorageExchangeRespList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserStorageExchangeRespList) ProtoMessage() {}

func (x *FindUserStorageExchangeRespList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserStorageExchangeRespList.ProtoReflect.Descriptor instead.
func (*FindUserStorageExchangeRespList) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{59}
}

func (x *FindUserStorageExchangeRespList) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FindUserStorageExchangeRespList) GetList() []*FindUserStorageExchangeResp {
	if x != nil {
		return x.List
	}
	return nil
}

type FindUserStorageExchangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid             int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	StorageExchange int64 `protobuf:"varint,3,opt,name=storageExchange,proto3" json:"storageExchange,omitempty"`
	CreatedTime     int64 `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *FindUserStorageExchangeResp) Reset() {
	*x = FindUserStorageExchangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserStorageExchangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserStorageExchangeResp) ProtoMessage() {}

func (x *FindUserStorageExchangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserStorageExchangeResp.ProtoReflect.Descriptor instead.
func (*FindUserStorageExchangeResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{60}
}

func (x *FindUserStorageExchangeResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindUserStorageExchangeResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindUserStorageExchangeResp) GetStorageExchange() int64 {
	if x != nil {
		return x.StorageExchange
	}
	return 0
}

func (x *FindUserStorageExchangeResp) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type ReceiveUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Storage   int64 `protobuf:"varint,2,opt,name=storage,proto3" json:"storage,omitempty"`
	IsReceive int64 `protobuf:"varint,3,opt,name=isReceive,proto3" json:"isReceive,omitempty"`
	Points    int64 `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *ReceiveUserReq) Reset() {
	*x = ReceiveUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveUserReq) ProtoMessage() {}

func (x *ReceiveUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveUserReq.ProtoReflect.Descriptor instead.
func (*ReceiveUserReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{61}
}

func (x *ReceiveUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReceiveUserReq) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ReceiveUserReq) GetIsReceive() int64 {
	if x != nil {
		return x.IsReceive
	}
	return 0
}

func (x *ReceiveUserReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type ReceiveActionPointsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Ip       string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Points   int64  `protobuf:"varint,5,opt,name=points,proto3" json:"points,omitempty"`
	Lan      string `protobuf:"bytes,6,opt,name=Lan,proto3" json:"Lan,omitempty"`
}

func (x *ReceiveActionPointsReq) Reset() {
	*x = ReceiveActionPointsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveActionPointsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveActionPointsReq) ProtoMessage() {}

func (x *ReceiveActionPointsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveActionPointsReq.ProtoReflect.Descriptor instead.
func (*ReceiveActionPointsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{62}
}

func (x *ReceiveActionPointsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReceiveActionPointsReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ReceiveActionPointsReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ReceiveActionPointsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReceiveActionPointsReq) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *ReceiveActionPointsReq) GetLan() string {
	if x != nil {
		return x.Lan
	}
	return ""
}

type IsOldUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOldUser bool `protobuf:"varint,1,opt,name=isOldUser,proto3" json:"isOldUser,omitempty"`
}

func (x *IsOldUserResp) Reset() {
	*x = IsOldUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsOldUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsOldUserResp) ProtoMessage() {}

func (x *IsOldUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsOldUserResp.ProtoReflect.Descriptor instead.
func (*IsOldUserResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{63}
}

func (x *IsOldUserResp) GetIsOldUser() bool {
	if x != nil {
		return x.IsOldUser
	}
	return false
}

type UserStorageAndToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage int64 `protobuf:"varint,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Token   int64 `protobuf:"varint,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserStorageAndToken) Reset() {
	*x = UserStorageAndToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStorageAndToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStorageAndToken) ProtoMessage() {}

func (x *UserStorageAndToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStorageAndToken.ProtoReflect.Descriptor instead.
func (*UserStorageAndToken) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{64}
}

func (x *UserStorageAndToken) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *UserStorageAndToken) GetToken() int64 {
	if x != nil {
		return x.Token
	}
	return 0
}

type SaveUserTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Token int64 `protobuf:"varint,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SaveUserTokenReq) Reset() {
	*x = SaveUserTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUserTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUserTokenReq) ProtoMessage() {}

func (x *SaveUserTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUserTokenReq.ProtoReflect.Descriptor instead.
func (*SaveUserTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{65}
}

func (x *SaveUserTokenReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SaveUserTokenReq) GetToken() int64 {
	if x != nil {
		return x.Token
	}
	return 0
}

type SaveUserTitanTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Expire int64  `protobuf:"varint,3,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *SaveUserTitanTokenReq) Reset() {
	*x = SaveUserTitanTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUserTitanTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUserTitanTokenReq) ProtoMessage() {}

func (x *SaveUserTitanTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUserTitanTokenReq.ProtoReflect.Descriptor instead.
func (*SaveUserTitanTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{66}
}

func (x *SaveUserTitanTokenReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SaveUserTitanTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SaveUserTitanTokenReq) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type FindOneUserTitanTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *FindOneUserTitanTokenReq) Reset() {
	*x = FindOneUserTitanTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneUserTitanTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneUserTitanTokenReq) ProtoMessage() {}

func (x *FindOneUserTitanTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneUserTitanTokenReq.ProtoReflect.Descriptor instead.
func (*FindOneUserTitanTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{67}
}

func (x *FindOneUserTitanTokenReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UserTitanToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Expire int64  `protobuf:"varint,3,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *UserTitanToken) Reset() {
	*x = UserTitanToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTitanToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTitanToken) ProtoMessage() {}

func (x *UserTitanToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTitanToken.ProtoReflect.Descriptor instead.
func (*UserTitanToken) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{68}
}

func (x *UserTitanToken) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserTitanToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserTitanToken) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type UpdateUserTitanTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Expire int64  `protobuf:"varint,3,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *UpdateUserTitanTokenReq) Reset() {
	*x = UpdateUserTitanTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserTitanTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTitanTokenReq) ProtoMessage() {}

func (x *UpdateUserTitanTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTitanTokenReq.ProtoReflect.Descriptor instead.
func (*UpdateUserTitanTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{69}
}

func (x *UpdateUserTitanTokenReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateUserTitanTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateUserTitanTokenReq) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type FindOneAssetFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssetId int64  `protobuf:"varint,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *FindOneAssetFileReq) Reset() {
	*x = FindOneAssetFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneAssetFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneAssetFileReq) ProtoMessage() {}

func (x *FindOneAssetFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneAssetFileReq.ProtoReflect.Descriptor instead.
func (*FindOneAssetFileReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{70}
}

func (x *FindOneAssetFileReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FindOneAssetFileReq) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

type AssetFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssetName   string `protobuf:"bytes,2,opt,name=assetName,proto3" json:"assetName,omitempty"`
	AssetSize   int64  `protobuf:"varint,3,opt,name=assetSize,proto3" json:"assetSize,omitempty"`
	AssetType   int64  `protobuf:"varint,4,opt,name=assetType,proto3" json:"assetType,omitempty"`
	Pid         int64  `protobuf:"varint,5,opt,name=pid,proto3" json:"pid,omitempty"`
	Source      int64  `protobuf:"varint,6,opt,name=source,proto3" json:"source,omitempty"` //积分来源 1本地上次2云上传
	Path        string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`      //路径
	Uid         int64  `protobuf:"varint,8,opt,name=uid,proto3" json:"uid,omitempty"`
	Cid         string `protobuf:"bytes,9,opt,name=cid,proto3" json:"cid,omitempty"`
	AssetId     int64  `protobuf:"varint,10,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Tag         int64  `protobuf:"varint,11,opt,name=tag,proto3" json:"tag,omitempty"`
	Status      int64  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"` //状态 1禁用2进行中3完成4失败
	Link        string `protobuf:"bytes,13,opt,name=link,proto3" json:"link,omitempty"`
	CreatedTime int64  `protobuf:"varint,14,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime int64  `protobuf:"varint,15,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
}

func (x *AssetFile) Reset() {
	*x = AssetFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetFile) ProtoMessage() {}

func (x *AssetFile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetFile.ProtoReflect.Descriptor instead.
func (*AssetFile) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{71}
}

func (x *AssetFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssetFile) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *AssetFile) GetAssetSize() int64 {
	if x != nil {
		return x.AssetSize
	}
	return 0
}

func (x *AssetFile) GetAssetType() int64 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *AssetFile) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *AssetFile) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *AssetFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AssetFile) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AssetFile) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *AssetFile) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AssetFile) GetTag() int64 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *AssetFile) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AssetFile) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *AssetFile) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *AssetFile) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type FindAssetFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AssetFile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindAssetFileResp) Reset() {
	*x = FindAssetFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAssetFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAssetFileResp) ProtoMessage() {}

func (x *FindAssetFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAssetFileResp.ProtoReflect.Descriptor instead.
func (*FindAssetFileResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{72}
}

func (x *FindAssetFileResp) GetList() []*AssetFile {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindAssetFileResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FindAssetFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []int64 `protobuf:"varint,1,rep,packed,name=status,proto3" json:"status,omitempty"` //状态 1禁用2进行中3完成4失败
	Id     string  `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Uid    int64   `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	Page   int64   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size   int64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FindAssetFileReq) Reset() {
	*x = FindAssetFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAssetFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAssetFileReq) ProtoMessage() {}

func (x *FindAssetFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAssetFileReq.ProtoReflect.Descriptor instead.
func (*FindAssetFileReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{73}
}

func (x *FindAssetFileReq) GetStatus() []int64 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FindAssetFileReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FindAssetFileReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FindAssetFileReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAssetFileReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type DelAssetFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`            // id
	IsSource bool     `protobuf:"varint,2,opt,name=isSource,proto3" json:"isSource,omitempty"` //是否删除源文件
}

func (x *DelAssetFileReq) Reset() {
	*x = DelAssetFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAssetFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAssetFileReq) ProtoMessage() {}

func (x *DelAssetFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAssetFileReq.ProtoReflect.Descriptor instead.
func (*DelAssetFileReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{74}
}

func (x *DelAssetFileReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DelAssetFileReq) GetIsSource() bool {
	if x != nil {
		return x.IsSource
	}
	return false
}

type UpdateAssetFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cid       string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	AssetId   int64  `protobuf:"varint,3,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Tag       int64  `protobuf:"varint,4,opt,name=tag,proto3" json:"tag,omitempty"`
	Status    int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"` //状态 1禁用2进行中3完成4失败
	Link      string `protobuf:"bytes,6,opt,name=link,proto3" json:"link,omitempty"`
	AssetSize int64  `protobuf:"varint,7,opt,name=assetSize,proto3" json:"assetSize,omitempty"`
}

func (x *UpdateAssetFileReq) Reset() {
	*x = UpdateAssetFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetFileReq) ProtoMessage() {}

func (x *UpdateAssetFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetFileReq.ProtoReflect.Descriptor instead.
func (*UpdateAssetFileReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateAssetFileReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAssetFileReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *UpdateAssetFileReq) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *UpdateAssetFileReq) GetTag() int64 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *UpdateAssetFileReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateAssetFileReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *UpdateAssetFileReq) GetAssetSize() int64 {
	if x != nil {
		return x.AssetSize
	}
	return 0
}

type SaveAssetFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AssetName string `protobuf:"bytes,3,opt,name=assetName,proto3" json:"assetName,omitempty"`
	AssetSize int64  `protobuf:"varint,4,opt,name=assetSize,proto3" json:"assetSize,omitempty"`
	AssetType int64  `protobuf:"varint,5,opt,name=assetType,proto3" json:"assetType,omitempty"` //1文件夹2文件3视频4图片
	Pid       int64  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Source    int64  `protobuf:"varint,6,opt,name=source,proto3" json:"source,omitempty"` //积分来源 1本地上次2云上传
	Path      string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`      //路径
}

func (x *SaveAssetFileReq) Reset() {
	*x = SaveAssetFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAssetFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAssetFileReq) ProtoMessage() {}

func (x *SaveAssetFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAssetFileReq.ProtoReflect.Descriptor instead.
func (*SaveAssetFileReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{76}
}

func (x *SaveAssetFileReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SaveAssetFileReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *SaveAssetFileReq) GetAssetSize() int64 {
	if x != nil {
		return x.AssetSize
	}
	return 0
}

func (x *SaveAssetFileReq) GetAssetType() int64 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *SaveAssetFileReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SaveAssetFileReq) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *SaveAssetFileReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SaveAssetFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveAssetFileResp) Reset() {
	*x = SaveAssetFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAssetFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAssetFileResp) ProtoMessage() {}

func (x *SaveAssetFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAssetFileResp.ProtoReflect.Descriptor instead.
func (*SaveAssetFileResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{77}
}

func (x *SaveAssetFileResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateAssetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateAssetResp) Reset() {
	*x = UpdateAssetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssetResp) ProtoMessage() {}

func (x *UpdateAssetResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssetResp.ProtoReflect.Descriptor instead.
func (*UpdateAssetResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{78}
}

func (x *UpdateAssetResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SaveBotCommandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotCommand   string `protobuf:"bytes,1,opt,name=botCommand,proto3" json:"botCommand,omitempty"`
	Text         string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Photo        string `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	ButtonArray  string `protobuf:"bytes,4,opt,name=button_array,json=buttonArray,proto3" json:"button_array,omitempty"`
	Status       int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	SendType     int64  `protobuf:"varint,6,opt,name=sendType,proto3" json:"sendType,omitempty"`
	Description  string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	LanguageCode string `protobuf:"bytes,8,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
}

func (x *SaveBotCommandReq) Reset() {
	*x = SaveBotCommandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBotCommandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBotCommandReq) ProtoMessage() {}

func (x *SaveBotCommandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBotCommandReq.ProtoReflect.Descriptor instead.
func (*SaveBotCommandReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{79}
}

func (x *SaveBotCommandReq) GetBotCommand() string {
	if x != nil {
		return x.BotCommand
	}
	return ""
}

func (x *SaveBotCommandReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SaveBotCommandReq) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *SaveBotCommandReq) GetButtonArray() string {
	if x != nil {
		return x.ButtonArray
	}
	return ""
}

func (x *SaveBotCommandReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SaveBotCommandReq) GetSendType() int64 {
	if x != nil {
		return x.SendType
	}
	return 0
}

func (x *SaveBotCommandReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SaveBotCommandReq) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type FindBotCommandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command      string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Text         string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	SendType     int64  `protobuf:"varint,6,opt,name=sendType,proto3" json:"sendType,omitempty"`
	Description  string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	LanguageCode string `protobuf:"bytes,8,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	Page         int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size         int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FindBotCommandReq) Reset() {
	*x = FindBotCommandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindBotCommandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBotCommandReq) ProtoMessage() {}

func (x *FindBotCommandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBotCommandReq.ProtoReflect.Descriptor instead.
func (*FindBotCommandReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{80}
}

func (x *FindBotCommandReq) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *FindBotCommandReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FindBotCommandReq) GetSendType() int64 {
	if x != nil {
		return x.SendType
	}
	return 0
}

func (x *FindBotCommandReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FindBotCommandReq) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *FindBotCommandReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindBotCommandReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type BotCommandItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Command      string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	LanguageCode string `protobuf:"bytes,11,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	Text         string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Photo        string `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	ButtonArray  string `protobuf:"bytes,5,opt,name=button_array,json=buttonArray,proto3" json:"button_array,omitempty"`
	Status       int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	SendType     int64  `protobuf:"varint,6,opt,name=sendType,proto3" json:"sendType,omitempty"`
	Description  string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	CreatedTime  int64  `protobuf:"varint,7,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime  int64  `protobuf:"varint,8,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
}

func (x *BotCommandItem) Reset() {
	*x = BotCommandItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotCommandItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotCommandItem) ProtoMessage() {}

func (x *BotCommandItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotCommandItem.ProtoReflect.Descriptor instead.
func (*BotCommandItem) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{81}
}

func (x *BotCommandItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BotCommandItem) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *BotCommandItem) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *BotCommandItem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BotCommandItem) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *BotCommandItem) GetButtonArray() string {
	if x != nil {
		return x.ButtonArray
	}
	return ""
}

func (x *BotCommandItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BotCommandItem) GetSendType() int64 {
	if x != nil {
		return x.SendType
	}
	return 0
}

func (x *BotCommandItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BotCommandItem) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *BotCommandItem) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type FindBotCommandResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*BotCommandItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindBotCommandResp) Reset() {
	*x = FindBotCommandResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindBotCommandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBotCommandResp) ProtoMessage() {}

func (x *FindBotCommandResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBotCommandResp.ProtoReflect.Descriptor instead.
func (*FindBotCommandResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{82}
}

func (x *FindBotCommandResp) GetList() []*BotCommandItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindBotCommandResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DelBotCommandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelBotCommandReq) Reset() {
	*x = DelBotCommandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBotCommandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBotCommandReq) ProtoMessage() {}

func (x *DelBotCommandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBotCommandReq.ProtoReflect.Descriptor instead.
func (*DelBotCommandReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{83}
}

func (x *DelBotCommandReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindOneBotCommandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BotCommand   string `protobuf:"bytes,2,opt,name=botCommand,proto3" json:"botCommand,omitempty"`
	LanguageCode string `protobuf:"bytes,3,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
}

func (x *FindOneBotCommandReq) Reset() {
	*x = FindOneBotCommandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneBotCommandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneBotCommandReq) ProtoMessage() {}

func (x *FindOneBotCommandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneBotCommandReq.ProtoReflect.Descriptor instead.
func (*FindOneBotCommandReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{84}
}

func (x *FindOneBotCommandReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindOneBotCommandReq) GetBotCommand() string {
	if x != nil {
		return x.BotCommand
	}
	return ""
}

func (x *FindOneBotCommandReq) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type BotPinMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatId      int64  `protobuf:"varint,2,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Msg         int64  `protobuf:"varint,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Text        string `protobuf:"bytes,5,opt,name=Text,proto3" json:"Text,omitempty"`
	CreatedTime int64  `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *BotPinMsg) Reset() {
	*x = BotPinMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotPinMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotPinMsg) ProtoMessage() {}

func (x *BotPinMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotPinMsg.ProtoReflect.Descriptor instead.
func (*BotPinMsg) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{85}
}

func (x *BotPinMsg) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BotPinMsg) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *BotPinMsg) GetMsg() int64 {
	if x != nil {
		return x.Msg
	}
	return 0
}

func (x *BotPinMsg) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BotPinMsg) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type FindBotPinMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*BotPinMsg `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindBotPinMsgResp) Reset() {
	*x = FindBotPinMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindBotPinMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBotPinMsgResp) ProtoMessage() {}

func (x *FindBotPinMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBotPinMsgResp.ProtoReflect.Descriptor instead.
func (*FindBotPinMsgResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{86}
}

func (x *FindBotPinMsgResp) GetList() []*BotPinMsg {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindBotPinMsgResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FindBotPinMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId int64 `protobuf:"varint,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Page   int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size   int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FindBotPinMsgReq) Reset() {
	*x = FindBotPinMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindBotPinMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBotPinMsgReq) ProtoMessage() {}

func (x *FindBotPinMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBotPinMsgReq.ProtoReflect.Descriptor instead.
func (*FindBotPinMsgReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{87}
}

func (x *FindBotPinMsgReq) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *FindBotPinMsgReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindBotPinMsgReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type DelBotPinMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatId int64 `protobuf:"varint,2,opt,name=chatId,proto3" json:"chatId,omitempty"`
}

func (x *DelBotPinMsgReq) Reset() {
	*x = DelBotPinMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBotPinMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBotPinMsgReq) ProtoMessage() {}

func (x *DelBotPinMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBotPinMsgReq.ProtoReflect.Descriptor instead.
func (*DelBotPinMsgReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{88}
}

func (x *DelBotPinMsgReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DelBotPinMsgReq) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

type SaveBotPinMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId int64  `protobuf:"varint,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Msg    int64  `protobuf:"varint,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Text   string `protobuf:"bytes,5,opt,name=Text,proto3" json:"Text,omitempty"`
}

func (x *SaveBotPinMsgReq) Reset() {
	*x = SaveBotPinMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBotPinMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBotPinMsgReq) ProtoMessage() {}

func (x *SaveBotPinMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBotPinMsgReq.ProtoReflect.Descriptor instead.
func (*SaveBotPinMsgReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{89}
}

func (x *SaveBotPinMsgReq) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SaveBotPinMsgReq) GetMsg() int64 {
	if x != nil {
		return x.Msg
	}
	return 0
}

func (x *SaveBotPinMsgReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Dict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc        string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	ParamType   int64  `protobuf:"varint,4,opt,name=paramType,proto3" json:"paramType,omitempty"`
	Value       string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	BackupValue int64  `protobuf:"varint,6,opt,name=backupValue,proto3" json:"backupValue,omitempty"`
	Code        string `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Dict) Reset() {
	*x = Dict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dict) ProtoMessage() {}

func (x *Dict) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dict.ProtoReflect.Descriptor instead.
func (*Dict) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{90}
}

func (x *Dict) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Dict) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dict) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Dict) GetParamType() int64 {
	if x != nil {
		return x.ParamType
	}
	return 0
}

func (x *Dict) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Dict) GetBackupValue() int64 {
	if x != nil {
		return x.BackupValue
	}
	return 0
}

func (x *Dict) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SaveDictReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dict []*Dict `protobuf:"bytes,1,rep,name=dict,proto3" json:"dict,omitempty"`
}

func (x *SaveDictReq) Reset() {
	*x = SaveDictReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDictReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDictReq) ProtoMessage() {}

func (x *SaveDictReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDictReq.ProtoReflect.Descriptor instead.
func (*SaveDictReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{91}
}

func (x *SaveDictReq) GetDict() []*Dict {
	if x != nil {
		return x.Dict
	}
	return nil
}

type FindDictByNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamType []int64  `protobuf:"varint,1,rep,packed,name=paramType,proto3" json:"paramType,omitempty"`
	Code      []string `protobuf:"bytes,2,rep,name=code,proto3" json:"code,omitempty"`
}

func (x *FindDictByNameReq) Reset() {
	*x = FindDictByNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDictByNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDictByNameReq) ProtoMessage() {}

func (x *FindDictByNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDictByNameReq.ProtoReflect.Descriptor instead.
func (*FindDictByNameReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{92}
}

func (x *FindDictByNameReq) GetParamType() []int64 {
	if x != nil {
		return x.ParamType
	}
	return nil
}

func (x *FindDictByNameReq) GetCode() []string {
	if x != nil {
		return x.Code
	}
	return nil
}

type FindDictByNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictList []*Dict `protobuf:"bytes,1,rep,name=dictList,proto3" json:"dictList,omitempty"`
}

func (x *FindDictByNameResp) Reset() {
	*x = FindDictByNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDictByNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDictByNameResp) ProtoMessage() {}

func (x *FindDictByNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDictByNameResp.ProtoReflect.Descriptor instead.
func (*FindDictByNameResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{93}
}

func (x *FindDictByNameResp) GetDictList() []*Dict {
	if x != nil {
		return x.DictList
	}
	return nil
}

type AccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountReq) Reset() {
	*x = AccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountReq) ProtoMessage() {}

func (x *AccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountReq.ProtoReflect.Descriptor instead.
func (*AccountReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{94}
}

func (x *AccountReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type AdminReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	Account   string  `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	IsDisable int64   `protobuf:"varint,3,opt,name=isDisable,proto3" json:"isDisable,omitempty"`
	Page      int64   `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Size      int64   `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *AdminReq) Reset() {
	*x = AdminReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminReq) ProtoMessage() {}

func (x *AdminReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminReq.ProtoReflect.Descriptor instead.
func (*AdminReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{95}
}

func (x *AdminReq) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AdminReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AdminReq) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *AdminReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AdminReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type QueryAdminRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Admins []*Admin `protobuf:"bytes,2,rep,name=admins,proto3" json:"admins,omitempty"`
}

func (x *QueryAdminRes) Reset() {
	*x = QueryAdminRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAdminRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAdminRes) ProtoMessage() {}

func (x *QueryAdminRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAdminRes.ProtoReflect.Descriptor instead.
func (*QueryAdminRes) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{96}
}

func (x *QueryAdminRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryAdminRes) GetAdmins() []*Admin {
	if x != nil {
		return x.Admins
	}
	return nil
}

type Admin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account     string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password    string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Avatar      string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	IsDisable   int64  `protobuf:"varint,5,opt,name=isDisable,proto3" json:"isDisable,omitempty"`
	CreatedTime int64  `protobuf:"varint,6,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime int64  `protobuf:"varint,7,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	LastTime    int64  `protobuf:"varint,8,opt,name=lastTime,proto3" json:"lastTime,omitempty"`
	Remark      string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *Admin) Reset() {
	*x = Admin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Admin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Admin) ProtoMessage() {}

func (x *Admin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Admin.ProtoReflect.Descriptor instead.
func (*Admin) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{97}
}

func (x *Admin) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Admin) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Admin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Admin) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Admin) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *Admin) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *Admin) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *Admin) GetLastTime() int64 {
	if x != nil {
		return x.LastTime
	}
	return 0
}

func (x *Admin) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SaveTaskPoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskType   int64  `protobuf:"varint,2,opt,name=taskType,proto3" json:"taskType,omitempty"`
	TaskName   string `protobuf:"bytes,3,opt,name=taskName,proto3" json:"taskName,omitempty"`
	Integral   int64  `protobuf:"varint,4,opt,name=integral,proto3" json:"integral,omitempty"`
	IsDisable  int64  `protobuf:"varint,5,opt,name=isDisable,proto3" json:"isDisable,omitempty"`
	Remark     string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	Link       string `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`
	TaskNameEn string `protobuf:"bytes,8,opt,name=taskNameEn,proto3" json:"taskNameEn,omitempty"`
	Sort       int64  `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *SaveTaskPoolReq) Reset() {
	*x = SaveTaskPoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveTaskPoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTaskPoolReq) ProtoMessage() {}

func (x *SaveTaskPoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTaskPoolReq.ProtoReflect.Descriptor instead.
func (*SaveTaskPoolReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{98}
}

func (x *SaveTaskPoolReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveTaskPoolReq) GetTaskType() int64 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *SaveTaskPoolReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *SaveTaskPoolReq) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *SaveTaskPoolReq) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *SaveTaskPoolReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SaveTaskPoolReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SaveTaskPoolReq) GetTaskNameEn() string {
	if x != nil {
		return x.TaskNameEn
	}
	return ""
}

func (x *SaveTaskPoolReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type FindTaskPoolByTaskTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	TaskType  int64  `protobuf:"varint,1,opt,name=taskType,proto3" json:"taskType,omitempty"`
	TaskName  string `protobuf:"bytes,2,opt,name=taskName,proto3" json:"taskName,omitempty"`
	IsDisable int64  `protobuf:"varint,6,opt,name=isDisable,proto3" json:"isDisable,omitempty"`
	Page      int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size      int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FindTaskPoolByTaskTypeReq) Reset() {
	*x = FindTaskPoolByTaskTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTaskPoolByTaskTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTaskPoolByTaskTypeReq) ProtoMessage() {}

func (x *FindTaskPoolByTaskTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTaskPoolByTaskTypeReq.ProtoReflect.Descriptor instead.
func (*FindTaskPoolByTaskTypeReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{99}
}

func (x *FindTaskPoolByTaskTypeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindTaskPoolByTaskTypeReq) GetTaskType() int64 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *FindTaskPoolByTaskTypeReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *FindTaskPoolByTaskTypeReq) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *FindTaskPoolByTaskTypeReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindTaskPoolByTaskTypeReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type DelTaskPoolByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelTaskPoolByIdReq) Reset() {
	*x = DelTaskPoolByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTaskPoolByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTaskPoolByIdReq) ProtoMessage() {}

func (x *DelTaskPoolByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTaskPoolByIdReq.ProtoReflect.Descriptor instead.
func (*DelTaskPoolByIdReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{100}
}

func (x *DelTaskPoolByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TaskPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskType    int64  `protobuf:"varint,2,opt,name=taskType,proto3" json:"taskType,omitempty"`
	TaskName    string `protobuf:"bytes,3,opt,name=taskName,proto3" json:"taskName,omitempty"`
	Integral    int64  `protobuf:"varint,4,opt,name=integral,proto3" json:"integral,omitempty"`
	CreatedTime int64  `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	IsDisable   int64  `protobuf:"varint,6,opt,name=isDisable,proto3" json:"isDisable,omitempty"`
	Remark      string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	Link        string `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`
	TaskNameEn  string `protobuf:"bytes,10,opt,name=taskNameEn,proto3" json:"taskNameEn,omitempty"`
	Sort        int64  `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *TaskPool) Reset() {
	*x = TaskPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPool) ProtoMessage() {}

func (x *TaskPool) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPool.ProtoReflect.Descriptor instead.
func (*TaskPool) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{101}
}

func (x *TaskPool) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskPool) GetTaskType() int64 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *TaskPool) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskPool) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *TaskPool) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *TaskPool) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *TaskPool) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TaskPool) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *TaskPool) GetTaskNameEn() string {
	if x != nil {
		return x.TaskNameEn
	}
	return ""
}

func (x *TaskPool) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type TaskPoolListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int64       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	TaskPools []*TaskPool `protobuf:"bytes,2,rep,name=taskPools,proto3" json:"taskPools,omitempty"`
}

func (x *TaskPoolListResp) Reset() {
	*x = TaskPoolListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPoolListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPoolListResp) ProtoMessage() {}

func (x *TaskPoolListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPoolListResp.ProtoReflect.Descriptor instead.
func (*TaskPoolListResp) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{102}
}

func (x *TaskPoolListResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TaskPoolListResp) GetTaskPools() []*TaskPool {
	if x != nil {
		return x.TaskPools
	}
	return nil
}

type QueryUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`            // 用户名
	IsDisable int64   `protobuf:"varint,2,opt,name=isDisable,proto3" json:"isDisable,omitempty"` // 是否禁用 2未禁用 1已禁用
	Page      int64   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size      int64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Id        int64   `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Pid       int64   `protobuf:"varint,11,opt,name=pid,proto3" json:"pid,omitempty"`
	StartTime int64   `protobuf:"varint,15,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64   `protobuf:"varint,16,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Uid       []int64 `protobuf:"varint,6,rep,packed,name=uid,proto3" json:"uid,omitempty"`
}

func (x *QueryUserReq) Reset() {
	*x = QueryUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserReq) ProtoMessage() {}

func (x *QueryUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserReq.ProtoReflect.Descriptor instead.
func (*QueryUserReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{103}
}

func (x *QueryUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryUserReq) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *QueryUserReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryUserReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryUserReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *QueryUserReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryUserReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryUserReq) GetUid() []int64 {
	if x != nil {
		return x.Uid
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid           int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Mail          string `protobuf:"bytes,5,opt,name=mail,proto3" json:"mail,omitempty"`
	WalletAddress string `protobuf:"bytes,8,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	Distribution  int64  `protobuf:"varint,10,opt,name=distribution,proto3" json:"distribution,omitempty"`
	Pid           int64  `protobuf:"varint,11,opt,name=pid,proto3" json:"pid,omitempty"`
	Pname         string `protobuf:"bytes,12,opt,name=pname,proto3" json:"pname,omitempty"`
	RecommendCode string `protobuf:"bytes,13,opt,name=recommendCode,proto3" json:"recommendCode,omitempty"`
	IsDisable     int64  `protobuf:"varint,14,opt,name=isDisable,proto3" json:"isDisable,omitempty"`
	CreatedTime   int64  `protobuf:"varint,15,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime   int64  `protobuf:"varint,16,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	Source        int64  `protobuf:"varint,17,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{104}
}

func (x *UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *UserInfo) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *UserInfo) GetDistribution() int64 {
	if x != nil {
		return x.Distribution
	}
	return 0
}

func (x *UserInfo) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *UserInfo) GetPname() string {
	if x != nil {
		return x.Pname
	}
	return ""
}

func (x *UserInfo) GetRecommendCode() string {
	if x != nil {
		return x.RecommendCode
	}
	return ""
}

func (x *UserInfo) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

func (x *UserInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *UserInfo) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *UserInfo) GetSource() int64 {
	if x != nil {
		return x.Source
	}
	return 0
}

type QueryUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Users []*UserInfo `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *QueryUserRes) Reset() {
	*x = QueryUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserRes) ProtoMessage() {}

func (x *QueryUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserRes.ProtoReflect.Descriptor instead.
func (*QueryUserRes) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{105}
}

func (x *QueryUserRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryUserRes) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type DisableUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               // id
	IsDisable int64 `protobuf:"varint,2,opt,name=isDisable,proto3" json:"isDisable,omitempty"` // 是否禁用 1禁用 2启用
}

func (x *DisableUserReq) Reset() {
	*x = DisableUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableUserReq) ProtoMessage() {}

func (x *DisableUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableUserReq.ProtoReflect.Descriptor instead.
func (*DisableUserReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{106}
}

func (x *DisableUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DisableUserReq) GetIsDisable() int64 {
	if x != nil {
		return x.IsDisable
	}
	return 0
}

type GetAllAssetIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid []int64 `protobuf:"varint,1,rep,packed,name=pid,proto3" json:"pid,omitempty"`
	Uid int64   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetAllAssetIDsReq) Reset() {
	*x = GetAllAssetIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAssetIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAssetIDsReq) ProtoMessage() {}

func (x *GetAllAssetIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAssetIDsReq.ProtoReflect.Descriptor instead.
func (*GetAllAssetIDsReq) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{107}
}

func (x *GetAllAssetIDsReq) GetPid() []int64 {
	if x != nil {
		return x.Pid
	}
	return nil
}

func (x *GetAllAssetIDsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type AllAssetIDsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *AllAssetIDsRes) Reset() {
	*x = AllAssetIDsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllAssetIDsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllAssetIDsRes) ProtoMessage() {}

func (x *AllAssetIDsRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllAssetIDsRes.ProtoReflect.Descriptor instead.
func (*AllAssetIDsRes) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{108}
}

func (x *AllAssetIDsRes) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_proto_user_proto protoreflect.FileDescriptor

var file_proto_user_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x1a, 0x0a, 0x06, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd2,
	0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x69, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x22, 0x21, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3f, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x73,
	0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x3f, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x73,
	0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x0c,
	0x53, 0x61, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x4e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x61, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x48, 0x0a, 0x0c, 0x46,
	0x69, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x81, 0x03, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x61, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x61,
	0x76, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x0d, 0x46, 0x69, 0x6e,
	0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x35, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x87, 0x02, 0x0a, 0x0d, 0x53,
	0x61, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x54, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x54,
	0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x54, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x39, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x64, 0x73, 0x22, 0x32, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x95, 0x03, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x64,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x41, 0x64, 0x64, 0x22, 0xe4,
	0x03, 0x0a, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54,
	0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x4a, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x22, 0xa0, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x0e, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x54, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x75, 0x69,
	0x64, 0x22, 0x74, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x22, 0x36, 0x0a, 0x1e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x26, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x13, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x2b, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0xc8, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x44, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x2d, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x7e, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x56, 0x69, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x56, 0x69,
	0x70, 0x22, 0x28, 0x0a, 0x14, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x11, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x38, 0x0a,
	0x12, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x22, 0xb4, 0x01, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x55, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x71,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x72, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x1b, 0x53, 0x61, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x12, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x56, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x6c, 0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x4c, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4c, 0x61, 0x6e, 0x22, 0x2d,
	0x0a, 0x0d, 0x49, 0x73, 0x4f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x45, 0x0a,
	0x13, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3a, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x57, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x74, 0x61,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x2c, 0x0a, 0x18, 0x46, 0x69, 0x6e,
	0x64, 0x4f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x74, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x59, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0xf3, 0x02, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x11, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x74, 0x0a, 0x10, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x3f, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0xac, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xbc, 0x01, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x23,
	0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x42,
	0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0xc5, 0x02, 0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x12, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x22, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x6a, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x6f, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x7b, 0x0a,
	0x09, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x11, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x52, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x39, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x42,
	0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x04, 0x44, 0x69,
	0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x2b, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x44, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x52, 0x04, 0x64, 0x69, 0x63,
	0x74, 0x22, 0x45, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x63, 0x74, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64,
	0x44, 0x69, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24,
	0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7a, 0x0a, 0x08,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x21, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x73, 0x22, 0xfb, 0x01, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0xf3, 0x01, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f,
	0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x08, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x54, 0x0a, 0x10, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x22,
	0xd4, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xfe, 0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x48, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x3e, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0e, 0x41, 0x6c,
	0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x32, 0xd9,
	0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x08, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0d, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x69, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0e, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x1a,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x42, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a,
	0x17, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x18, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x41,
	0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x41, 0x6e, 0x64,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x4f,
	0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x73, 0x4f, 0x6c, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x53, 0x61, 0x76,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x46, 0x69, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x29, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x0b,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2d, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x70,
	0x79, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0f, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4e, 0x6f, 0x44, 0x65, 0x6c, 0x12, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c,
	0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x16,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x11,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x46, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x1b, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x4b, 0x0a, 0x28, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x79, 0x49,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x09, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x44, 0x69, 0x63, 0x74, 0x12, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x46,
	0x69, 0x6e, 0x64, 0x44, 0x69, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x69,
	0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0d,
	0x53, 0x61, 0x76, 0x65, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73,
	0x67, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x74, 0x50,
	0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x35, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6f,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e,
	0x65, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3e, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x31, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3a, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3d, 0x0a,
	0x12, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x15,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x74, 0x61, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x74,
	0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x74, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_user_proto_rawDescOnce sync.Once
	file_proto_user_proto_rawDescData = file_proto_user_proto_rawDesc
)

func file_proto_user_proto_rawDescGZIP() []byte {
	file_proto_user_proto_rawDescOnce.Do(func() {
		file_proto_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_proto_rawDescData)
	})
	return file_proto_user_proto_rawDescData
}

var file_proto_user_proto_msgTypes = make([]protoimpl.MessageInfo, 109)
var file_proto_user_proto_goTypes = []any{
	(*UidReq)(nil),                          // 0: pb.UidReq
	(*Response)(nil),                        // 1: pb.Response
	(*User)(nil),                            // 2: pb.User
	(*UserCodeReq)(nil),                     // 3: pb.UserCodeReq
	(*FindTaskReq)(nil),                     // 4: pb.FindTaskReq
	(*Task)(nil),                            // 5: pb.Task
	(*TaskResp)(nil),                        // 6: pb.TaskResp
	(*SaveTaskReq)(nil),                     // 7: pb.SaveTaskReq
	(*UserList)(nil),                        // 8: pb.UserList
	(*SaveShareReq)(nil),                    // 9: pb.SaveShareReq
	(*UpdateShareReq)(nil),                  // 10: pb.UpdateShareReq
	(*FindShareReq)(nil),                    // 11: pb.FindShareReq
	(*Share)(nil),                           // 12: pb.Share
	(*FindShareResp)(nil),                   // 13: pb.FindShareResp
	(*FindOneShareReq)(nil),                 // 14: pb.FindOneShareReq
	(*SaveAssetsReq)(nil),                   // 15: pb.SaveAssetsReq
	(*UpdateAssetsNameReq)(nil),             // 16: pb.UpdateAssetsNameReq
	(*UpdateAssetsMoveReq)(nil),             // 17: pb.UpdateAssetsMoveReq
	(*UpdateAssetsCopyReq)(nil),             // 18: pb.UpdateAssetsCopyReq
	(*DelAssetsReq)(nil),                    // 19: pb.DelAssetsReq
	(*FindAssetsReq)(nil),                   // 20: pb.FindAssetsReq
	(*Assets)(nil),                          // 21: pb.Assets
	(*FindAssetsResp)(nil),                  // 22: pb.FindAssetsResp
	(*FindOneAssetsReq)(nil),                // 23: pb.FindOneAssetsReq
	(*UpdateAssetsStatusReq)(nil),           // 24: pb.UpdateAssetsStatusReq
	(*SaveAssetsResp)(nil),                  // 25: pb.SaveAssetsResp
	(*DelUserReq)(nil),                      // 26: pb.DelUserReq
	(*SignInTaskResp)(nil),                  // 27: pb.SignInTaskResp
	(*SaveMessageReq)(nil),                  // 28: pb.SaveMessageReq
	(*DelMessageReq)(nil),                   // 29: pb.DelMessageReq
	(*FindMessageReq)(nil),                  // 30: pb.FindMessageReq
	(*MessageItem)(nil),                     // 31: pb.MessageItem
	(*FindMessageResp)(nil),                 // 32: pb.FindMessageResp
	(*FindUserByPidReq)(nil),                // 33: pb.FindUserByPidReq
	(*FindOneTaskReq)(nil),                  // 34: pb.FindOneTaskReq
	(*UpdateTaskReq)(nil),                   // 35: pb.UpdateTaskReq
	(*CountUserByExchangeStorageReq)(nil),   // 36: pb.CountUserByExchangeStorageReq
	(*CountUserByExchangeStorageResp)(nil),  // 37: pb.CountUserByExchangeStorageResp
	(*CountUserInviteReq)(nil),              // 38: pb.CountUserInviteReq
	(*CountUserInviteResp)(nil),             // 39: pb.CountUserInviteResp
	(*CheckUserInviteReq)(nil),              // 40: pb.CheckUserInviteReq
	(*CheckUserInviteResp)(nil),             // 41: pb.CheckUserInviteResp
	(*CountAssetsReq)(nil),                  // 42: pb.CountAssetsReq
	(*CountAssetsResp)(nil),                 // 43: pb.CountAssetsResp
	(*FindUserRewardIntegralReq)(nil),       // 44: pb.FindUserRewardIntegralReq
	(*FindUserRewardIntegralResp)(nil),      // 45: pb.FindUserRewardIntegralResp
	(*SaveUserRewardReq)(nil),               // 46: pb.SaveUserRewardReq
	(*ClaimInviteRewardReq)(nil),            // 47: pb.ClaimInviteRewardReq
	(*FindUserInviteReq)(nil),               // 48: pb.FindUserInviteReq
	(*UserInvite)(nil),                      // 49: pb.UserInvite
	(*FindUserInviteResp)(nil),              // 50: pb.FindUserInviteResp
	(*FindOneUserPointsReq)(nil),            // 51: pb.FindOneUserPointsReq
	(*FindOneUserPointsResp)(nil),           // 52: pb.FindOneUserPointsResp
	(*FindOneUserStorageReq)(nil),           // 53: pb.FindOneUserStorageReq
	(*FindOneUserStorageResp)(nil),          // 54: pb.FindOneUserStorageResp
	(*SaveUserPointsAndStorageReq)(nil),     // 55: pb.SaveUserPointsAndStorageReq
	(*FindUserPointsReq)(nil),               // 56: pb.FindUserPointsReq
	(*FindUserPointsResp)(nil),              // 57: pb.FindUserPointsResp
	(*FindUserStorageExchangeReq)(nil),      // 58: pb.FindUserStorageExchangeReq
	(*FindUserStorageExchangeRespList)(nil), // 59: pb.FindUserStorageExchangeRespList
	(*FindUserStorageExchangeResp)(nil),     // 60: pb.FindUserStorageExchangeResp
	(*ReceiveUserReq)(nil),                  // 61: pb.ReceiveUserReq
	(*ReceiveActionPointsReq)(nil),          // 62: pb.ReceiveActionPointsReq
	(*IsOldUserResp)(nil),                   // 63: pb.IsOldUserResp
	(*UserStorageAndToken)(nil),             // 64: pb.UserStorageAndToken
	(*SaveUserTokenReq)(nil),                // 65: pb.SaveUserTokenReq
	(*SaveUserTitanTokenReq)(nil),           // 66: pb.SaveUserTitanTokenReq
	(*FindOneUserTitanTokenReq)(nil),        // 67: pb.FindOneUserTitanTokenReq
	(*UserTitanToken)(nil),                  // 68: pb.UserTitanToken
	(*UpdateUserTitanTokenReq)(nil),         // 69: pb.UpdateUserTitanTokenReq
	(*FindOneAssetFileReq)(nil),             // 70: pb.FindOneAssetFileReq
	(*AssetFile)(nil),                       // 71: pb.AssetFile
	(*FindAssetFileResp)(nil),               // 72: pb.FindAssetFileResp
	(*FindAssetFileReq)(nil),                // 73: pb.FindAssetFileReq
	(*DelAssetFileReq)(nil),                 // 74: pb.DelAssetFileReq
	(*UpdateAssetFileReq)(nil),              // 75: pb.UpdateAssetFileReq
	(*SaveAssetFileReq)(nil),                // 76: pb.SaveAssetFileReq
	(*SaveAssetFileResp)(nil),               // 77: pb.SaveAssetFileResp
	(*UpdateAssetResp)(nil),                 // 78: pb.UpdateAssetResp
	(*SaveBotCommandReq)(nil),               // 79: pb.SaveBotCommandReq
	(*FindBotCommandReq)(nil),               // 80: pb.FindBotCommandReq
	(*BotCommandItem)(nil),                  // 81: pb.BotCommandItem
	(*FindBotCommandResp)(nil),              // 82: pb.FindBotCommandResp
	(*DelBotCommandReq)(nil),                // 83: pb.DelBotCommandReq
	(*FindOneBotCommandReq)(nil),            // 84: pb.FindOneBotCommandReq
	(*BotPinMsg)(nil),                       // 85: pb.BotPinMsg
	(*FindBotPinMsgResp)(nil),               // 86: pb.FindBotPinMsgResp
	(*FindBotPinMsgReq)(nil),                // 87: pb.FindBotPinMsgReq
	(*DelBotPinMsgReq)(nil),                 // 88: pb.DelBotPinMsgReq
	(*SaveBotPinMsgReq)(nil),                // 89: pb.SaveBotPinMsgReq
	(*Dict)(nil),                            // 90: pb.Dict
	(*SaveDictReq)(nil),                     // 91: pb.SaveDictReq
	(*FindDictByNameReq)(nil),               // 92: pb.FindDictByNameReq
	(*FindDictByNameResp)(nil),              // 93: pb.FindDictByNameResp
	(*AccountReq)(nil),                      // 94: pb.AccountReq
	(*AdminReq)(nil),                        // 95: pb.AdminReq
	(*QueryAdminRes)(nil),                   // 96: pb.QueryAdminRes
	(*Admin)(nil),                           // 97: pb.Admin
	(*SaveTaskPoolReq)(nil),                 // 98: pb.SaveTaskPoolReq
	(*FindTaskPoolByTaskTypeReq)(nil),       // 99: pb.FindTaskPoolByTaskTypeReq
	(*DelTaskPoolByIdReq)(nil),              // 100: pb.DelTaskPoolByIdReq
	(*TaskPool)(nil),                        // 101: pb.TaskPool
	(*TaskPoolListResp)(nil),                // 102: pb.TaskPoolListResp
	(*QueryUserReq)(nil),                    // 103: pb.QueryUserReq
	(*UserInfo)(nil),                        // 104: pb.UserInfo
	(*QueryUserRes)(nil),                    // 105: pb.QueryUserRes
	(*DisableUserReq)(nil),                  // 106: pb.DisableUserReq
	(*GetAllAssetIDsReq)(nil),               // 107: pb.GetAllAssetIDsReq
	(*AllAssetIDsRes)(nil),                  // 108: pb.AllAssetIDsRes
}
var file_proto_user_proto_depIdxs = []int32{
	5,   // 0: pb.TaskResp.tasks:type_name -> pb.Task
	2,   // 1: pb.UserList.users:type_name -> pb.User
	12,  // 2: pb.FindShareResp.shares:type_name -> pb.Share
	21,  // 3: pb.FindAssetsResp.assets:type_name -> pb.Assets
	31,  // 4: pb.FindMessageResp.messages:type_name -> pb.MessageItem
	49,  // 5: pb.FindUserInviteResp.list:type_name -> pb.UserInvite
	52,  // 6: pb.FindUserPointsResp.list:type_name -> pb.FindOneUserPointsResp
	60,  // 7: pb.FindUserStorageExchangeRespList.list:type_name -> pb.FindUserStorageExchangeResp
	71,  // 8: pb.FindAssetFileResp.list:type_name -> pb.AssetFile
	81,  // 9: pb.FindBotCommandResp.list:type_name -> pb.BotCommandItem
	85,  // 10: pb.FindBotPinMsgResp.list:type_name -> pb.BotPinMsg
	90,  // 11: pb.SaveDictReq.dict:type_name -> pb.Dict
	90,  // 12: pb.FindDictByNameResp.dictList:type_name -> pb.Dict
	97,  // 13: pb.QueryAdminRes.admins:type_name -> pb.Admin
	101, // 14: pb.TaskPoolListResp.taskPools:type_name -> pb.TaskPool
	104, // 15: pb.QueryUserRes.users:type_name -> pb.UserInfo
	0,   // 16: pb.user.FindOneByUid:input_type -> pb.UidReq
	2,   // 17: pb.user.SaveUser:input_type -> pb.User
	26,  // 18: pb.user.DelUser:input_type -> pb.DelUserReq
	33,  // 19: pb.user.FindUserByPid:input_type -> pb.FindUserByPidReq
	103, // 20: pb.user.FindUser:input_type -> pb.QueryUserReq
	3,   // 21: pb.user.FindUserByCode:input_type -> pb.UserCodeReq
	38,  // 22: pb.user.CountUserInvite:input_type -> pb.CountUserInviteReq
	36,  // 23: pb.user.CountUserByExchangeStorage:input_type -> pb.CountUserByExchangeStorageReq
	40,  // 24: pb.user.CheckUserInvite:input_type -> pb.CheckUserInviteReq
	51,  // 25: pb.user.FindOneUserPoints:input_type -> pb.FindOneUserPointsReq
	56,  // 26: pb.user.FindUserPoints:input_type -> pb.FindUserPointsReq
	53,  // 27: pb.user.FindOneUserStorage:input_type -> pb.FindOneUserStorageReq
	58,  // 28: pb.user.FindUserStorageExchange:input_type -> pb.FindUserStorageExchangeReq
	55,  // 29: pb.user.SaveUserPointsAndStorage:input_type -> pb.SaveUserPointsAndStorageReq
	61,  // 30: pb.user.ReceiveUser:input_type -> pb.ReceiveUserReq
	62,  // 31: pb.user.CheckReceive:input_type -> pb.ReceiveActionPointsReq
	62,  // 32: pb.user.ReceiveActionPoints:input_type -> pb.ReceiveActionPointsReq
	0,   // 33: pb.user.CheckIsOldUser:input_type -> pb.UidReq
	0,   // 34: pb.user.GetUserStorageAndToken:input_type -> pb.UidReq
	65,  // 35: pb.user.SaveUserToken:input_type -> pb.SaveUserTokenReq
	28,  // 36: pb.user.SaveMessage:input_type -> pb.SaveMessageReq
	29,  // 37: pb.user.DelMessage:input_type -> pb.DelMessageReq
	30,  // 38: pb.user.FindMessage:input_type -> pb.FindMessageReq
	4,   // 39: pb.user.FindTask:input_type -> pb.FindTaskReq
	34,  // 40: pb.user.FindOneTask:input_type -> pb.FindOneTaskReq
	35,  // 41: pb.user.UpdateTask:input_type -> pb.UpdateTaskReq
	7,   // 42: pb.user.SaveTask:input_type -> pb.SaveTaskReq
	9,   // 43: pb.user.SaveShare:input_type -> pb.SaveShareReq
	10,  // 44: pb.user.UpdateShare:input_type -> pb.UpdateShareReq
	11,  // 45: pb.user.FindShare:input_type -> pb.FindShareReq
	14,  // 46: pb.user.FindOneShare:input_type -> pb.FindOneShareReq
	14,  // 47: pb.user.DelShare:input_type -> pb.FindOneShareReq
	15,  // 48: pb.user.SaveAssets:input_type -> pb.SaveAssetsReq
	16,  // 49: pb.user.UpdateAssetsName:input_type -> pb.UpdateAssetsNameReq
	17,  // 50: pb.user.UpdateAssetsMove:input_type -> pb.UpdateAssetsMoveReq
	18,  // 51: pb.user.UpdateAssetsCopy:input_type -> pb.UpdateAssetsCopyReq
	19,  // 52: pb.user.DelAssets:input_type -> pb.DelAssetsReq
	20,  // 53: pb.user.FindAssets:input_type -> pb.FindAssetsReq
	20,  // 54: pb.user.FindAssetsNoDel:input_type -> pb.FindAssetsReq
	23,  // 55: pb.user.FindOneAssets:input_type -> pb.FindOneAssetsReq
	19,  // 56: pb.user.RestoreAssets:input_type -> pb.DelAssetsReq
	19,  // 57: pb.user.ClearAssets:input_type -> pb.DelAssetsReq
	42,  // 58: pb.user.CountAssets:input_type -> pb.CountAssetsReq
	107, // 59: pb.user.GetAllAssetIds:input_type -> pb.GetAllAssetIDsReq
	44,  // 60: pb.user.FindUserRewardIntegral:input_type -> pb.FindUserRewardIntegralReq
	46,  // 61: pb.user.SaveUserReward:input_type -> pb.SaveUserRewardReq
	47,  // 62: pb.user.ClaimInviteReward:input_type -> pb.ClaimInviteRewardReq
	48,  // 63: pb.user.FindUserInvite:input_type -> pb.FindUserInviteReq
	94,  // 64: pb.user.FindOneByAccountDeletedTime:input_type -> pb.AccountReq
	94,  // 65: pb.user.FindOneByIdAccountDeletedTime:input_type -> pb.AccountReq
	95,  // 66: pb.user.FindAdminByIdAccountIsDisableDeletedTime:input_type -> pb.AdminReq
	97,  // 67: pb.user.SaveAdmin:input_type -> pb.Admin
	100, // 68: pb.user.DelAdmin:input_type -> pb.DelTaskPoolByIdReq
	103, // 69: pb.user.FindUserByNameIsDisable:input_type -> pb.QueryUserReq
	106, // 70: pb.user.DisableUser:input_type -> pb.DisableUserReq
	98,  // 71: pb.user.SaveTaskPool:input_type -> pb.SaveTaskPoolReq
	99,  // 72: pb.user.FindTaskPoolByTaskType:input_type -> pb.FindTaskPoolByTaskTypeReq
	100, // 73: pb.user.DelTaskPoolById:input_type -> pb.DelTaskPoolByIdReq
	91,  // 74: pb.user.SaveDict:input_type -> pb.SaveDictReq
	92,  // 75: pb.user.FindDictByName:input_type -> pb.FindDictByNameReq
	89,  // 76: pb.user.SaveBotPinMsg:input_type -> pb.SaveBotPinMsgReq
	88,  // 77: pb.user.DelBotPinMsg:input_type -> pb.DelBotPinMsgReq
	87,  // 78: pb.user.FindBotPinMsg:input_type -> pb.FindBotPinMsgReq
	79,  // 79: pb.user.SaveBotCommand:input_type -> pb.SaveBotCommandReq
	80,  // 80: pb.user.FindBotCommand:input_type -> pb.FindBotCommandReq
	83,  // 81: pb.user.DelBotCommand:input_type -> pb.DelBotCommandReq
	84,  // 82: pb.user.FindOneBotCommand:input_type -> pb.FindOneBotCommandReq
	76,  // 83: pb.user.SaveAssetFile:input_type -> pb.SaveAssetFileReq
	75,  // 84: pb.user.UpdateAssetFile:input_type -> pb.UpdateAssetFileReq
	74,  // 85: pb.user.DelAssetFile:input_type -> pb.DelAssetFileReq
	73,  // 86: pb.user.FindAssetFile:input_type -> pb.FindAssetFileReq
	70,  // 87: pb.user.FindOneAssetFile:input_type -> pb.FindOneAssetFileReq
	66,  // 88: pb.user.SaveUserTitanToken:input_type -> pb.SaveUserTitanTokenReq
	67,  // 89: pb.user.FindOneUserTitanToken:input_type -> pb.FindOneUserTitanTokenReq
	69,  // 90: pb.user.UpdateUserTitanToken:input_type -> pb.UpdateUserTitanTokenReq
	2,   // 91: pb.user.FindOneByUid:output_type -> pb.User
	1,   // 92: pb.user.SaveUser:output_type -> pb.Response
	1,   // 93: pb.user.DelUser:output_type -> pb.Response
	8,   // 94: pb.user.FindUserByPid:output_type -> pb.UserList
	8,   // 95: pb.user.FindUser:output_type -> pb.UserList
	2,   // 96: pb.user.FindUserByCode:output_type -> pb.User
	39,  // 97: pb.user.CountUserInvite:output_type -> pb.CountUserInviteResp
	37,  // 98: pb.user.CountUserByExchangeStorage:output_type -> pb.CountUserByExchangeStorageResp
	41,  // 99: pb.user.CheckUserInvite:output_type -> pb.CheckUserInviteResp
	52,  // 100: pb.user.FindOneUserPoints:output_type -> pb.FindOneUserPointsResp
	57,  // 101: pb.user.FindUserPoints:output_type -> pb.FindUserPointsResp
	54,  // 102: pb.user.FindOneUserStorage:output_type -> pb.FindOneUserStorageResp
	59,  // 103: pb.user.FindUserStorageExchange:output_type -> pb.FindUserStorageExchangeRespList
	1,   // 104: pb.user.SaveUserPointsAndStorage:output_type -> pb.Response
	1,   // 105: pb.user.ReceiveUser:output_type -> pb.Response
	1,   // 106: pb.user.CheckReceive:output_type -> pb.Response
	1,   // 107: pb.user.ReceiveActionPoints:output_type -> pb.Response
	63,  // 108: pb.user.CheckIsOldUser:output_type -> pb.IsOldUserResp
	64,  // 109: pb.user.GetUserStorageAndToken:output_type -> pb.UserStorageAndToken
	1,   // 110: pb.user.SaveUserToken:output_type -> pb.Response
	1,   // 111: pb.user.SaveMessage:output_type -> pb.Response
	1,   // 112: pb.user.DelMessage:output_type -> pb.Response
	32,  // 113: pb.user.FindMessage:output_type -> pb.FindMessageResp
	6,   // 114: pb.user.FindTask:output_type -> pb.TaskResp
	5,   // 115: pb.user.FindOneTask:output_type -> pb.Task
	1,   // 116: pb.user.UpdateTask:output_type -> pb.Response
	1,   // 117: pb.user.SaveTask:output_type -> pb.Response
	1,   // 118: pb.user.SaveShare:output_type -> pb.Response
	1,   // 119: pb.user.UpdateShare:output_type -> pb.Response
	13,  // 120: pb.user.FindShare:output_type -> pb.FindShareResp
	12,  // 121: pb.user.FindOneShare:output_type -> pb.Share
	1,   // 122: pb.user.DelShare:output_type -> pb.Response
	25,  // 123: pb.user.SaveAssets:output_type -> pb.SaveAssetsResp
	1,   // 124: pb.user.UpdateAssetsName:output_type -> pb.Response
	1,   // 125: pb.user.UpdateAssetsMove:output_type -> pb.Response
	1,   // 126: pb.user.UpdateAssetsCopy:output_type -> pb.Response
	1,   // 127: pb.user.DelAssets:output_type -> pb.Response
	22,  // 128: pb.user.FindAssets:output_type -> pb.FindAssetsResp
	22,  // 129: pb.user.FindAssetsNoDel:output_type -> pb.FindAssetsResp
	21,  // 130: pb.user.FindOneAssets:output_type -> pb.Assets
	1,   // 131: pb.user.RestoreAssets:output_type -> pb.Response
	1,   // 132: pb.user.ClearAssets:output_type -> pb.Response
	43,  // 133: pb.user.CountAssets:output_type -> pb.CountAssetsResp
	108, // 134: pb.user.GetAllAssetIds:output_type -> pb.AllAssetIDsRes
	45,  // 135: pb.user.FindUserRewardIntegral:output_type -> pb.FindUserRewardIntegralResp
	1,   // 136: pb.user.SaveUserReward:output_type -> pb.Response
	1,   // 137: pb.user.ClaimInviteReward:output_type -> pb.Response
	50,  // 138: pb.user.FindUserInvite:output_type -> pb.FindUserInviteResp
	97,  // 139: pb.user.FindOneByAccountDeletedTime:output_type -> pb.Admin
	97,  // 140: pb.user.FindOneByIdAccountDeletedTime:output_type -> pb.Admin
	96,  // 141: pb.user.FindAdminByIdAccountIsDisableDeletedTime:output_type -> pb.QueryAdminRes
	1,   // 142: pb.user.SaveAdmin:output_type -> pb.Response
	1,   // 143: pb.user.DelAdmin:output_type -> pb.Response
	105, // 144: pb.user.FindUserByNameIsDisable:output_type -> pb.QueryUserRes
	1,   // 145: pb.user.DisableUser:output_type -> pb.Response
	1,   // 146: pb.user.SaveTaskPool:output_type -> pb.Response
	102, // 147: pb.user.FindTaskPoolByTaskType:output_type -> pb.TaskPoolListResp
	1,   // 148: pb.user.DelTaskPoolById:output_type -> pb.Response
	1,   // 149: pb.user.SaveDict:output_type -> pb.Response
	93,  // 150: pb.user.FindDictByName:output_type -> pb.FindDictByNameResp
	1,   // 151: pb.user.SaveBotPinMsg:output_type -> pb.Response
	1,   // 152: pb.user.DelBotPinMsg:output_type -> pb.Response
	86,  // 153: pb.user.FindBotPinMsg:output_type -> pb.FindBotPinMsgResp
	1,   // 154: pb.user.SaveBotCommand:output_type -> pb.Response
	82,  // 155: pb.user.FindBotCommand:output_type -> pb.FindBotCommandResp
	1,   // 156: pb.user.DelBotCommand:output_type -> pb.Response
	81,  // 157: pb.user.FindOneBotCommand:output_type -> pb.BotCommandItem
	77,  // 158: pb.user.SaveAssetFile:output_type -> pb.SaveAssetFileResp
	78,  // 159: pb.user.UpdateAssetFile:output_type -> pb.UpdateAssetResp
	1,   // 160: pb.user.DelAssetFile:output_type -> pb.Response
	72,  // 161: pb.user.FindAssetFile:output_type -> pb.FindAssetFileResp
	71,  // 162: pb.user.FindOneAssetFile:output_type -> pb.AssetFile
	1,   // 163: pb.user.SaveUserTitanToken:output_type -> pb.Response
	68,  // 164: pb.user.FindOneUserTitanToken:output_type -> pb.UserTitanToken
	1,   // 165: pb.user.UpdateUserTitanToken:output_type -> pb.Response
	91,  // [91:166] is the sub-list for method output_type
	16,  // [16:91] is the sub-list for method input_type
	16,  // [16:16] is the sub-list for extension type_name
	16,  // [16:16] is the sub-list for extension extendee
	0,   // [0:16] is the sub-list for field type_name
}

func init() { file_proto_user_proto_init() }
func file_proto_user_proto_init() {
	if File_proto_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_user_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UserCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FindTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SaveTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SaveShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FindShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Share); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FindShareResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SaveAssetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssetsNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssetsMoveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssetsCopyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DelAssetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*FindAssetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Assets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*FindAssetsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneAssetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssetsStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*SaveAssetsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*DelUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*SignInTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*SaveMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*DelMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*FindMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*MessageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*FindMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserByPidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CountUserByExchangeStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CountUserByExchangeStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CountUserInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CountUserInviteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CheckUserInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CheckUserInviteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*CountAssetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CountAssetsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserRewardIntegralReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserRewardIntegralResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*SaveUserRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ClaimInviteRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*UserInvite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserInviteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneUserPointsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneUserPointsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneUserStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneUserStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*SaveUserPointsAndStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserPointsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserPointsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserStorageExchangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserStorageExchangeRespList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*FindUserStorageExchangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveActionPointsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*IsOldUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*UserStorageAndToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*SaveUserTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*SaveUserTitanTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneUserTitanTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*UserTitanToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserTitanTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneAssetFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*AssetFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*FindAssetFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*FindAssetFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*DelAssetFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssetFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*SaveAssetFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*SaveAssetFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*SaveBotCommandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*FindBotCommandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*BotCommandItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*FindBotCommandResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*DelBotCommandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*FindOneBotCommandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*BotPinMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*FindBotPinMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*FindBotPinMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*DelBotPinMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*SaveBotPinMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*Dict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*SaveDictReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*FindDictByNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*FindDictByNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*AccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*AdminReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*QueryAdminRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*Admin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*SaveTaskPoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*FindTaskPoolByTaskTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*DelTaskPoolByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*TaskPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*TaskPoolListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*QueryUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*DisableUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllAssetIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*AllAssetIDsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   109,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_proto_goTypes,
		DependencyIndexes: file_proto_user_proto_depIdxs,
		MessageInfos:      file_proto_user_proto_msgTypes,
	}.Build()
	File_proto_user_proto = out.File
	file_proto_user_proto_rawDesc = nil
	file_proto_user_proto_goTypes = nil
	file_proto_user_proto_depIdxs = nil
}
