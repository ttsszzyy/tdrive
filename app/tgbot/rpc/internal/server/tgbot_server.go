// Code generated by goctl. DO NOT EDIT.
// Source: tgbot.proto

package server

import (
	"context"

	"T-driver/app/tgbot/rpc/internal/logic"
	"T-driver/app/tgbot/rpc/internal/svc"
	"T-driver/app/tgbot/rpc/pb"
)

type TgbotServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTgbotServer
}

func NewTgbotServer(svcCtx *svc.ServiceContext) *TgbotServer {
	return &TgbotServer{
		svcCtx: svcCtx,
	}
}

// 文本发送
func (s *TgbotServer) SendBotMsg(ctx context.Context, in *pb.SendBotMsgRequest) (*pb.SendBotMsgResponse, error) {
	l := logic.NewSendBotMsgLogic(ctx, s.svcCtx)
	return l.SendBotMsg(in)
}

// 发送pin消息
func (s *TgbotServer) SendPhoto(ctx context.Context, in *pb.SendPhotoRequest) (*pb.SendBotMsgResponse, error) {
	l := logic.NewSendPhotoLogic(ctx, s.svcCtx)
	return l.SendPhoto(in)
}

func (s *TgbotServer) DelPinMsg(ctx context.Context, in *pb.DelPinMsgReq) (*pb.DelPinMsgResp, error) {
	l := logic.NewDelPinMsgLogic(ctx, s.svcCtx)
	return l.DelPinMsg(in)
}

func (s *TgbotServer) DelAllPinMsg(ctx context.Context, in *pb.DelAllPinMsgReq) (*pb.DelPinMsgResp, error) {
	l := logic.NewDelAllPinMsgLogic(ctx, s.svcCtx)
	return l.DelAllPinMsg(in)
}

func (s *TgbotServer) SendBotCommand(ctx context.Context, in *pb.SendBotCommandReq) (*pb.DelPinMsgResp, error) {
	l := logic.NewSendBotCommandLogic(ctx, s.svcCtx)
	return l.SendBotCommand(in)
}
