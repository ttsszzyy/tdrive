// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package video

import (
	"context"

	"T-driver/app/video/rpc/videoPb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CountLabelUserItem = videoPb.CountLabelUserItem
	CountLabelUserReq  = videoPb.CountLabelUserReq
	CountLabelUserResp = videoPb.CountLabelUserResp
	CreateCommentReq   = videoPb.CreateCommentReq
	CreateLabelReq     = videoPb.CreateLabelReq
	CreateLabelResp    = videoPb.CreateLabelResp
	CreateReplyReq     = videoPb.CreateReplyReq
	CreateReplyResp    = videoPb.CreateReplyResp
	CreateVideoReq     = videoPb.CreateVideoReq
	CreateVideoResp    = videoPb.CreateVideoResp
	DeleteVideoReq     = videoPb.DeleteVideoReq
	GetCommentListReq  = videoPb.GetCommentListReq
	GetCommentListResp = videoPb.GetCommentListResp
	GetLabelListReq    = videoPb.GetLabelListReq
	GetLabelListResp   = videoPb.GetLabelListResp
	GetLabelUserReq    = videoPb.GetLabelUserReq
	GetLabelUserResp   = videoPb.GetLabelUserResp
	GetOneLabelReq     = videoPb.GetOneLabelReq
	GetOneLabelUserReq = videoPb.GetOneLabelUserReq
	GetReplyListReq    = videoPb.GetReplyListReq
	GetReplyListResp   = videoPb.GetReplyListResp
	GetVideoListReq    = videoPb.GetVideoListReq
	GetVideoListResp   = videoPb.GetVideoListResp
	SaveLabelUserReq   = videoPb.SaveLabelUserReq
	SaveLabelUserResp  = videoPb.SaveLabelUserResp
	UpdateVideoReq     = videoPb.UpdateVideoReq
	Video              = videoPb.Video
	VideoResponse      = videoPb.VideoResponse
	VideosComment      = videoPb.VideosComment
	VideosLabel        = videoPb.VideosLabel
	VideosLabelUser    = videoPb.VideosLabelUser
	VideosReply        = videoPb.VideosReply

	VideoZrpcClient interface {
		// 视频
		CreateVideo(ctx context.Context, in *CreateVideoReq, opts ...grpc.CallOption) (*CreateVideoResp, error)
		UpdateVideo(ctx context.Context, in *UpdateVideoReq, opts ...grpc.CallOption) (*VideoResponse, error)
		DeleteVideo(ctx context.Context, in *DeleteVideoReq, opts ...grpc.CallOption) (*VideoResponse, error)
		GetVideoList(ctx context.Context, in *GetVideoListReq, opts ...grpc.CallOption) (*GetVideoListResp, error)
		// 标签
		CreateLabel(ctx context.Context, in *CreateLabelReq, opts ...grpc.CallOption) (*CreateLabelResp, error)
		GetLabelList(ctx context.Context, in *GetLabelListReq, opts ...grpc.CallOption) (*GetLabelListResp, error)
		GetOneLabel(ctx context.Context, in *GetOneLabelReq, opts ...grpc.CallOption) (*VideosLabel, error)
		// 标签点赞
		SaveLabelUser(ctx context.Context, in *SaveLabelUserReq, opts ...grpc.CallOption) (*SaveLabelUserResp, error)
		GetLabelUser(ctx context.Context, in *GetLabelUserReq, opts ...grpc.CallOption) (*GetLabelUserResp, error)
		GetOneLabelUser(ctx context.Context, in *GetOneLabelUserReq, opts ...grpc.CallOption) (*VideosLabelUser, error)
		CountLabelUser(ctx context.Context, in *CountLabelUserReq, opts ...grpc.CallOption) (*CountLabelUserResp, error)
		// 评论
		CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*VideoResponse, error)
		GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListResp, error)
		// 回复评论
		CreateReply(ctx context.Context, in *CreateReplyReq, opts ...grpc.CallOption) (*CreateReplyResp, error)
		GetReplyList(ctx context.Context, in *GetReplyListReq, opts ...grpc.CallOption) (*GetReplyListResp, error)
	}

	defaultVideoZrpcClient struct {
		cli zrpc.Client
	}
)

func NewVideoZrpcClient(cli zrpc.Client) VideoZrpcClient {
	return &defaultVideoZrpcClient{
		cli: cli,
	}
}

// 视频
func (m *defaultVideoZrpcClient) CreateVideo(ctx context.Context, in *CreateVideoReq, opts ...grpc.CallOption) (*CreateVideoResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.CreateVideo(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) UpdateVideo(ctx context.Context, in *UpdateVideoReq, opts ...grpc.CallOption) (*VideoResponse, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.UpdateVideo(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) DeleteVideo(ctx context.Context, in *DeleteVideoReq, opts ...grpc.CallOption) (*VideoResponse, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.DeleteVideo(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) GetVideoList(ctx context.Context, in *GetVideoListReq, opts ...grpc.CallOption) (*GetVideoListResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.GetVideoList(ctx, in, opts...)
}

// 标签
func (m *defaultVideoZrpcClient) CreateLabel(ctx context.Context, in *CreateLabelReq, opts ...grpc.CallOption) (*CreateLabelResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.CreateLabel(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) GetLabelList(ctx context.Context, in *GetLabelListReq, opts ...grpc.CallOption) (*GetLabelListResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.GetLabelList(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) GetOneLabel(ctx context.Context, in *GetOneLabelReq, opts ...grpc.CallOption) (*VideosLabel, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.GetOneLabel(ctx, in, opts...)
}

// 标签点赞
func (m *defaultVideoZrpcClient) SaveLabelUser(ctx context.Context, in *SaveLabelUserReq, opts ...grpc.CallOption) (*SaveLabelUserResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.SaveLabelUser(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) GetLabelUser(ctx context.Context, in *GetLabelUserReq, opts ...grpc.CallOption) (*GetLabelUserResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.GetLabelUser(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) GetOneLabelUser(ctx context.Context, in *GetOneLabelUserReq, opts ...grpc.CallOption) (*VideosLabelUser, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.GetOneLabelUser(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) CountLabelUser(ctx context.Context, in *CountLabelUserReq, opts ...grpc.CallOption) (*CountLabelUserResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.CountLabelUser(ctx, in, opts...)
}

// 评论
func (m *defaultVideoZrpcClient) CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*VideoResponse, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.CreateComment(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.GetCommentList(ctx, in, opts...)
}

// 回复评论
func (m *defaultVideoZrpcClient) CreateReply(ctx context.Context, in *CreateReplyReq, opts ...grpc.CallOption) (*CreateReplyResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.CreateReply(ctx, in, opts...)
}

func (m *defaultVideoZrpcClient) GetReplyList(ctx context.Context, in *GetReplyListReq, opts ...grpc.CallOption) (*GetReplyListResp, error) {
	client := videoPb.NewVideoClient(m.cli.Conn())
	return client.GetReplyList(ctx, in, opts...)
}
