// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"T-driver/app/video/rpc/internal/logic"
	"T-driver/app/video/rpc/internal/svc"
	"T-driver/app/video/rpc/videoPb"
)

type VideoServer struct {
	svcCtx *svc.ServiceContext
	videoPb.UnimplementedVideoServer
}

func NewVideoServer(svcCtx *svc.ServiceContext) *VideoServer {
	return &VideoServer{
		svcCtx: svcCtx,
	}
}

// 视频
func (s *VideoServer) CreateVideo(ctx context.Context, in *videoPb.CreateVideoReq) (*videoPb.CreateVideoResp, error) {
	l := logic.NewCreateVideoLogic(ctx, s.svcCtx)
	return l.CreateVideo(in)
}

func (s *VideoServer) UpdateVideo(ctx context.Context, in *videoPb.UpdateVideoReq) (*videoPb.VideoResponse, error) {
	l := logic.NewUpdateVideoLogic(ctx, s.svcCtx)
	return l.UpdateVideo(in)
}

func (s *VideoServer) DeleteVideo(ctx context.Context, in *videoPb.DeleteVideoReq) (*videoPb.VideoResponse, error) {
	l := logic.NewDeleteVideoLogic(ctx, s.svcCtx)
	return l.DeleteVideo(in)
}

func (s *VideoServer) GetVideoList(ctx context.Context, in *videoPb.GetVideoListReq) (*videoPb.GetVideoListResp, error) {
	l := logic.NewGetVideoListLogic(ctx, s.svcCtx)
	return l.GetVideoList(in)
}

// 标签
func (s *VideoServer) CreateLabel(ctx context.Context, in *videoPb.CreateLabelReq) (*videoPb.CreateLabelResp, error) {
	l := logic.NewCreateLabelLogic(ctx, s.svcCtx)
	return l.CreateLabel(in)
}

func (s *VideoServer) GetLabelList(ctx context.Context, in *videoPb.GetLabelListReq) (*videoPb.GetLabelListResp, error) {
	l := logic.NewGetLabelListLogic(ctx, s.svcCtx)
	return l.GetLabelList(in)
}

func (s *VideoServer) GetOneLabel(ctx context.Context, in *videoPb.GetOneLabelReq) (*videoPb.VideosLabel, error) {
	l := logic.NewGetOneLabelLogic(ctx, s.svcCtx)
	return l.GetOneLabel(in)
}

// 标签点赞
func (s *VideoServer) SaveLabelUser(ctx context.Context, in *videoPb.SaveLabelUserReq) (*videoPb.SaveLabelUserResp, error) {
	l := logic.NewSaveLabelUserLogic(ctx, s.svcCtx)
	return l.SaveLabelUser(in)
}

func (s *VideoServer) GetLabelUser(ctx context.Context, in *videoPb.GetLabelUserReq) (*videoPb.GetLabelUserResp, error) {
	l := logic.NewGetLabelUserLogic(ctx, s.svcCtx)
	return l.GetLabelUser(in)
}

func (s *VideoServer) GetOneLabelUser(ctx context.Context, in *videoPb.GetOneLabelUserReq) (*videoPb.VideosLabelUser, error) {
	l := logic.NewGetOneLabelUserLogic(ctx, s.svcCtx)
	return l.GetOneLabelUser(in)
}

func (s *VideoServer) CountLabelUser(ctx context.Context, in *videoPb.CountLabelUserReq) (*videoPb.CountLabelUserResp, error) {
	l := logic.NewCountLabelUserLogic(ctx, s.svcCtx)
	return l.CountLabelUser(in)
}

// 评论
func (s *VideoServer) CreateComment(ctx context.Context, in *videoPb.CreateCommentReq) (*videoPb.VideoResponse, error) {
	l := logic.NewCreateCommentLogic(ctx, s.svcCtx)
	return l.CreateComment(in)
}

func (s *VideoServer) GetCommentList(ctx context.Context, in *videoPb.GetCommentListReq) (*videoPb.GetCommentListResp, error) {
	l := logic.NewGetCommentListLogic(ctx, s.svcCtx)
	return l.GetCommentList(in)
}

// 回复评论
func (s *VideoServer) CreateReply(ctx context.Context, in *videoPb.CreateReplyReq) (*videoPb.CreateReplyResp, error) {
	l := logic.NewCreateReplyLogic(ctx, s.svcCtx)
	return l.CreateReply(in)
}

func (s *VideoServer) GetReplyList(ctx context.Context, in *videoPb.GetReplyListReq) (*videoPb.GetReplyListResp, error) {
	l := logic.NewGetReplyListLogic(ctx, s.svcCtx)
	return l.GetReplyList(in)
}
